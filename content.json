{"meta":{"title":"YAKJS","subtitle":"Click to start browsing articles.","description":"YAKJS is a awesome website that brings you intersting knowledge.","author":"Mr.APIS","url":"http://www.yakjs.com","root":"/"},"pages":[{"title":"","date":"2022-12-23T06:53:56.620Z","updated":"2022-12-23T06:53:56.620Z","comments":true,"path":"404.html","permalink":"http://www.yakjs.com/404.html","excerpt":"","text":"404 * { margin: 0; padding: 0; outline: none; font-family: \\5FAE\\8F6F\\96C5\\9ED1, 宋体; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; -khtml-user-select: none; user-select: none; cursor: default; font-weight: lighter; } .center { margin: 0 auto; } .whole { width: 100%; height: 100%; line-height: 100%; position: fixed; bottom: 0; left: 0; z-index: -1000; overflow: hidden; } .whole img { width: 100%; height: 100%; } .mask { width: 100%; height: 100%; position: absolute; top: 0; left: 0; background: #000; opacity: 0.6; filter: alpha(opacity=60); } .b { width: 100%; text-align: center; height: 400px; position: absolute; top: 50%; margin-top: -230px; } .a { width: 150px; height: 50px; margin-top: 30px; } .a a { display: block; float: left; width: 150px; height: 50px; background: #fff; text-align: center; line-height: 50px; font-size: 18px; border-radius: 25px; color: #333; } .a a:hover { color: #000; box-shadow: #fff 0 0 20px; } p { color: #fff; margin-top: 40px; font-size: 24px; } #num { margin: 0 5px; font-weight: bold; } var num = 4; function redirect() { num--; document.getElementById(\"num\").innerHTML = num; if (num < 0) { document.getElementById(\"num\").innerHTML = 0; location.href = \"http://www.yakjs.com/\"; } } setInterval(\"redirect()\", 1000); 暂时未能找到您查找的页面 可能输入的网址错误或此页面不存在 秒后自动跳转到主页"},{"title":"About","date":"2022-12-23T05:54:30.955Z","updated":"2022-12-23T05:54:30.955Z","comments":true,"path":"about/index.html","permalink":"http://www.yakjs.com/about/index.html","excerpt":"","text":"Who am I I am a slow walker, but I never walk backwards. —— Abraham Lincoln; 记录生活，记录学习笔记。 喜欢一探究竟，寻根究底。偶尔也囫囵吞枣。希望这些分享对你能有所帮助。 世间草木皆美, 你也是。"},{"title":"","date":"2023-02-21T09:17:18.034Z","updated":"2023-02-21T09:17:18.034Z","comments":true,"path":"contact/index.html","permalink":"http://www.yakjs.com/contact/index.html","excerpt":"","text":"Email Me Send"},{"title":"categories","date":"2022-12-21T09:40:28.000Z","updated":"2022-12-21T11:04:30.676Z","comments":false,"path":"categories/index.html","permalink":"http://www.yakjs.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-12-21T09:41:52.000Z","updated":"2022-12-22T00:47:52.966Z","comments":true,"path":"tags/index.html","permalink":"http://www.yakjs.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"yakjs.com","slug":"yakjs","date":"2999-12-31T16:00:01.000Z","updated":"2023-05-26T07:52:17.200Z","comments":true,"path":"3000/01/01/yakjs/","link":"","permalink":"http://www.yakjs.com/3000/01/01/yakjs/","excerpt":"","text":"Welcome to yakjs! What is yakjs? YAKJS is a awesome website that brings you intersting knowledge.","categories":[],"tags":[]},{"title":"有惊无险","slug":"v931pzuYTkgczX18RVWXlw","date":"2023-07-06T02:40:17.986Z","updated":"2022-12-22T09:31:00.167Z","comments":true,"path":"2023/07/06/v931pzuYTkgczX18RVWXlw/","link":"","permalink":"http://www.yakjs.com/2023/07/06/v931pzuYTkgczX18RVWXlw/","excerpt":"","text":"每天一刷朋友圈，看大家发的照片，很少有蓝天。 天不蓝，拍什么都不好看。 包括人。 我一直在想，中国到底还有没有蓝天白云？ 青藏高原有。 可是高原缺氧，不适合居住，除了高海拔的青藏高原，还有没有蓝天白云？ 上个月，我南下转悠了一圈，从江苏去了安徽，又去了湖北湖南，又去了重庆、四川、陕西、河南，回到山东。 我翻了翻自己拍的照片，竟然没有一张蓝天。 南方也沦陷了。 三亚的天呢？ 我看骑友发的骑行海南，也不如以前蓝了，难道整个中国都沦陷了，被污染了，前段时间，山东直接重度污染，早上起床，我站在阳台上看不到对面的楼，不是雾，而是霾，有毒，甚至直接就能闻到味道。 我儿子长这么大，貌似还没见过真正的星星。 难道，连看星星都成奢侈品了？ 这次重度污染据说罪魁祸首是东北，他们供暖，还有就是农民焚烧玉米秆，我们出发东北那天，在山东与河北交界处堵了三小时，河北高速封了，因为能见度太低，一直到了下午 3 点才放开…… 当时我就在想，去东北还有意义吗？污染这么严重，天不蓝，拍不出好照片，装不了 B 的旅行还有什么意义？ 这次的目标是沿着边境线画个鸡头，属于目标旅行，目标旅行就容易过于目标化，急功近利只想着赶路，想刷数据，那么就会抄近道，走高速，与我们的初衷就相悖，不是说好走最原始的线路吗？就沿着铁丝网走吗？ 真沿着铁丝网，是高消费、高消耗的，需要大量的时间、金钱、耐心，一天也就是赶 200 公里，要想环完整个东北少不了 1 个月。 一年才有几个月？我们拿出 1 个月来折腾？ 真的能坚持到最后吗？ 过了临江以后，越走越震撼，路越来越难走，空气越来越好，天蓝的好像在空中装了美图秀秀一般，压根不需要 P 图，蓝的那么纯粹。 天蓝蓝，水蓝蓝，特别是小溪是那么的清澈。 晚上，星星一闪一闪的。 每天我都会晒一些风景照，既不是单反拍的，也不是美图过的，基本上就是手机随手拍的，是照片漂亮还是实景漂亮？ 实景是真漂亮。 在路上我就在想，我们走的这条路是具有特殊意义的，等于开辟了新的旅游线路，对于大部分中国人而言，大家可能在余生会规划多场旅行，去 N 个景点，但是未必会行走国境线，因为这里太偏了，太远了，我们走了大家可能终生都不会走的线路，这是有特殊意义的，于我们自己也是，可能这是最后一次行走到这里。 去长白山那天，我们翻过了几座山，途经了原始森林，几十公里的下坡路，那天刚换了雪地胎，路面全是积雪，有雪不怕，一刹就能刹住，越跑越欢，最后下坡时我基本上保持时速 100，大家都觉得很兴奋，把一切都归结为了雪地胎的功劳，心想东北司机不过如此，我还以为技术比我们好呢，原来只是轮胎比我们棒，现在我们也换上了，来吧，看看谁的活更好…… 路上，偶尔有几辆车子，我们全部秒杀。 呼啸而过。 我们的确有些膨胀了，偶尔是我头车，偶尔是腚疼头车，腚疼晚上 8 点带队时，他都敢跑到 90 以上，是在镜子路面，相当的自信。 我在后面追得很急，尾巴甩了两下，但是无大碍，到了酒店我才发现我忘记了挂四驱了，怪不得呢。 我们牛 B 大了。 次日，我们去长白山国际旅游度假区，这里主要是玩滑雪，我有些不理解，万达投资几百亿只是为了建个滑雪场？而且一个破滑雪场为什么还有麦当劳还有肯德基还有必胜客？关键是三个品牌仿佛是亲兄弟，直接紧挨着。 滑雪，至于搞这么大动静吗？ 度假区的房价非常高，最便宜也要 1000 元/晚，万达这是要抢钱呀？这么贵有人住吗？ 有！ 我问了一下住在山脚下的小伙伴：这里夏天是旺季还是冬天是旺季？ 他说，冬天是。 我问，滑雪有上瘾的吗？ 他说，太多了，很多人在这里一住就是一两个月，不是偶尔滑，而是天天滑，你们玩的是人造雪，他们不玩，他们都玩中级以上的天然雪道。 我问，这玩意烧钱吗？ 他说，那肯定的。 我问，夏天有人来玩吗？ 他说，也很多，夏天来的主要是打高尔夫。 万达一直在朝旅游方向发展，我最近看了一份财经报告，最近两个月的海外并购项目里，九成是与旅行相关的。 中国人的旅行意识，刚刚觉醒。 未来，不得了。 例如，中国境外游的主流群体是夕阳红，就是那些有钱有闲的退休人，我们一拨一拨地退休，一拨一拨地旅游。 我跟团出国 N 次，我这样的旅客就属于很奇葩的，因为我属于年轻人系列，中国游客里最缺少的就是年轻人。 说的直接一点，我们在老龄化，也在慢慢的开始进入夕阳红旅行团了，开始行走世界各地了，所以大家别急，未来我们都会出国的，只是现在年龄还不够…… 有些时候，天上真的会掉馅饼，我这个朋友家就在这里，突然万达来了，把周边地皮全炒起来了，原本镇上最好的房子也不过 2000 元/平，一年后就成了 3000 元/平，别觉得涨幅小，这已经是涨了 50%，还了得吗？ 周边的村子，全跟着沾光了，大家可以做农家乐呀，要么搞餐饮，要么搞民宿。 我这个朋友就是搞民宿的。 去他家，他给我们准备了两个地锅，一锅鱼，一锅鸡，这也是我们第一次见面，说起见面就更有些意思了，沿途我的原则是尽量的不见朋友，因为我见朋友就给朋友添负担，我们十多个人，朋友请吃饭压力多大？ 何况会影响大家的行程。 所以，我的照片都是延后的，今天发昨天的，明天发今天的，我发在吉林，其实我已经在黑龙江了…… 别人问我，我都说，真不巧，我昨天还在那里呢，接着给发个位置坐标过去，证明我没撒谎。 腚疼他们去滑雪，我在肯德基，这个朋友给我发信息：你们走了？ 我说，走了。 他说，看到万达酒店门口有辆鲁 Q 的车，我还在想，是不是你的？我们这里很少有鲁牌的车子。 我说，是我的。 他就过来了。 我说，我们的确一大早就走了，但是腚疼他们非要滑雪，就回来了。 我说的也是真事，我们的确走了又回来了，因为要不要滑雪，队伍发生了分歧，笑笑的意思是应该赶路，滑雪有什么意思？腚疼的意思是必须滑雪。 最终笑笑妥协了。 吃饭时，跟本地这个朋友一聊，他老家也是山东的，当年爷爷闯关东过来的，一问山东哪的，我晕，竟然离我老家不到 10 公里。 更亲了。 吃过午饭，他问我继续赶路还是？ 我说，赶路，谢谢你请我们吃饭，我要帮你发个广告，你这里的确不错。 我顺手给发了个广告。 他说，你们今天要是去延吉的话，沿途有个地方特别难走，叫姥爷岭，这个季节那里随处都是车祸，前些日子我经过，还遇到了四五起事故。 我们一齐哈哈笑了。 意思是，你低估我们了…… 我们给他讲述了我们时速 100 穿越长白山原始森林，上坡下坡，盘山公路，压根不减速。 没问题， 小 Case，管他姥爷岭还是姥娘岭，你们能跑我们就能跑，比这个更惊险的我们都玩过，何况这些路，不就是雪嘛！ 腚疼说 11 点 30 分准时下山，但是他又食言了，我们等他到 12 点半，他没出现，也弄得很尴尬，人家给我们准备了 10 个人的座位，结果腚疼他们一伙都没来…… 饭毕，我们决定单独出发了。 笑笑的车子在前，我在后。 笑笑有个队友是潍坊的，胖子，大学是学散打的，后来是公务员，再后来是自己创业了，做传统生意的，土石工程之类的，这跨度也实在有点大，他看我自己开车蛮孤独的，就上了我的车。 他喜欢车，我也喜欢车，就聊起了车子，越聊越兴奋。 从丹东到长白山，虽然雪越来越大，但是无非就是路面有 10 厘米的积雪，不厚，甚至很多地方都已经露出路面了，轮胎有足够的抓地力，但是翻姥爷岭则不同，越走越厚，而且树上全是雪，说明雪很大，甚至可能刚刚下过。 到了最高峰时，我被眼前的景色震撼住了，真跟仙境似的，两边的树全部是雾凇模式，太美了，那一刻我才觉得照片太狭隘了，压根表现不了真实的美。 胖子一直在那里大呼：此景只应天上有。 胖子问我应该如何接下一去，我说：此景只应天上有，此时应该喝小酒，啤酒还是白酒？ 然后，我们俩哈哈大笑。 我觉得，这是我在东北见过最美的景色，美得无法描述…… 路面是什么状态？ 雪化了，又冻了，全成了疙瘩，我在朋友圈发了一段小视频，车子基本上就是那个模式，搓衣板路的感觉，车子全程都在跳，我用 2 档跑的直线，1 档跑的弯道。 线路有难度吗？ 我觉得难度是有，但是不至于他说的那么夸张，我们是雪地胎好吧？难道还怕你不成？ 跑过了最高峰，我们开始下坡，下面就不这么颠簸了，笑笑在前面带路，跑得很快，这是我们换了雪地胎的第二天，格外的兴奋，因为到此为止还没遇到过什么危险，一直都是稳稳的，哪怕雪面直刹。 笑笑在前面跑，我在后面没有刻意地跟，因为我想录几段视频发给媳妇看看，胖子也在录，他还在最后录上了大拇指，我问他什么意思，他说要给点个赞…… 我们俩就这么拍着视频，吹着牛，唱着歌，下山去，山路很长很长，全程应该有 20 公里以上。 下山肯定要撒欢，使劲跑吧。 平一点的，70~80。 弯一点的，50 左右。 有个弯道，弧度不大，我也没刻意减速，当时速度也不快，因为我正在跟胖子吹牛，谈得眉飞色舞，没有刻意跑快。 弯道的中间是个桥面，连接桥面的位置不是雪，而是冰，而且冰本身形成了有倾角的镜面，经过时我发现前轮晃了一下，我下意识地点了一下刹车，结果屁股马上甩了一下，我接着反应过来了，这是在东北不能刹车，我抬起刹车，接着点了油门，车身马上修正过来了，冰雪路面不怕加油怕刹车。 我刚缓过神来，发现笑笑的车子横在了桥头，应该是刚刚旋转过，而且是撞击过护栏了，车子前面已经受伤，无大碍，还能开，只是一些细微的问题。 我个人推测，就是冰面时踩了刹车，当然这些都是次要的，关键在于速度太快了，麻痹大意了，我们几个都太自信了。 而且，车子一旦失控，人们习惯反应一定是反打方向，这样不仅仅修正不了，反而加速了车子旋转，还有就是一定会把刹车使劲踩，这样车子会转得更有劲。 这些都是下意识的，不受控制的。 他们差十多厘米就翻下去了，车上的小伙伴脸都吓绿了，喊着要写遗书，我倒觉得这是好事，因为本身又没伤到，反而是给所有人上了一课，要敬畏大自然，不应该低估它，也要感谢护栏，没翻下去。 小灾是为了避免大灾，而且对笑笑而言，这绝对是成长，优秀司机一定是通过经历来成长的，一个司机优秀不优秀，不是看跑直路的能力，而是看应急能力，是否能化险为夷，是否能敬畏规则。 越是平顺，越容易自信，甚至自大，只有偶尔发生一些小意外才能提醒我们边界在哪里，我们若是敢挑战规则，规则就会惩罚我们。 我认为是好事，这不是安慰话，是真心话，不经历这些，可能越跑越快，一次就来个大的，就再也没有机会反省了。 而且只有亲身经历了一些事才能成长，经验是不可传递的，因为经历不可传递。 五年前，我开车已经蛮不错了，每次组队我基本上都是头车，要么就是主驾，我即便是开辆捷达也敢跟宝马对飙，你敢在高速上跑到 180，我就敢追上你，我开皮卡都跑过 200 的时速，当时还没挂牌，在随岳高速上跑的，跟一辆郑州的 A7 对飙了一会。 那时没觉得有啥，年轻，气盛，总认为自己技高一筹，意思是什么？你有好车有啥了不起？我就是开个货车也秒杀你。 只要你真心敢跑，在高速上很少有车子能甩开你，因为没人敢长时间跑 200 的速度，用心追，没有追不上的。 当时，我写了这么一篇关于高速挑衅的，下面回复最多的一句话是：那是你没遇到我…… 意思是我遇到他，他会用他的长安之星灭了我。 现在？ 省道我很少开到 80 以上，高速我很少开到 120 以上，基本上严格遵守《交规法》，今天旁边的队友还问我：他们是临牌超速不怕，你不怕吗？ 我说，我没超速，我为什么怕？ 我要是遇到了五年前的懂懂，我上去就给他一个耳光：SB！ 但是，当年我的战绩的确很牛 B，每年 7 万公里以上，几乎就是零事故，这与我的天性有关，我天性就属于胆小鬼，睡觉都要躲在媳妇怀里的那种人。 我开了这么多里程，从来没发生过两车刮蹭之类的，单方事故发生过两三次，要么是炸了轮胎，要么是撞了护栏，当时是因为我太自信了，那么大的雪，我在高速上跑 100，前面连环追尾了，我没得躲了，撞了护栏。 当时，我以为我能刹住，其实刹不住。 有时，我静心回忆一下自己的驾驶里程，有很多次都是命悬一线，侥幸逃脱，应该说感谢上帝的不杀之恩，越回想越觉得自己是个 SB，当初咋就敢挑战概率呢？还是太年轻，太嫩！ 在这群小伙伴里，笑笑属于开车最稳的，前些日子刚自驾过拉萨，通过这次小插曲，我认为他会蜕变成一个更优秀的司机。 劝别人是错误的，特别是关于驾驶，因为每个人对驾驶都是绝对自信的，但是自信不意味着就真的安全，我一直都想教育教育腚疼，他累计里程只有 5000 公里左右，几乎没有长途跋涉经验，整次穿越我最担心的就是他掉链子，这路实在太危险了，好在他没走姥爷岭，走了高速。 我劝与不劝，其实都一样，属于他的经历若是不出现，他是不会成长的。 别人代替不了，反而惹人烦。 有个小队友，她坐我车，我提醒她：系上安全带。 她说，其实无所谓了，我一点都不怕死，生死由命。 我说，你可以这么认为，但是呢，系上安全带会使死亡的概率降低，你就是命再硬，何必拿鸡蛋往石头上碰呢？你若是觉得我要求苛刻了，可以回到腚疼车上。 她有些不情愿。 我说，你坐我车，不是给我面子，说得直接一点，我们之间没有关系，是司机与搭车关系，若是真的发生了交通事故呢？那么你的家属就会找到我，要求我赔偿，那么你有没有想过这么一层？你坐我车，其实是给我带来了潜在的风险，从这个角度而言，你系上安全带，是对我基本的尊重，我不拉你是应该，拉你是面子，既然坐我的车，就要遵守我的规则。 她是做微商的，跟我讲，她徒步过 318，国内只有新疆没有去过，其它省份都去过，包括东北也是第二次来，93 年的，据她自己讲，一个月能有 20~100 万的营业额，是自己的品牌，自己带团队。 她是炮神招募来的队友。 这次旅行有三个领队，笑笑领着一支队伍，腚疼领着一支，炮神一支，但是炮神的车子中途退出了，因为爬不上坡，实在走不下去了，于是他们队伍就搭了我的车，因为这个事，炮神的队友中途退出了一位，他一共带了两位队友。 2 万元/人，成本 1 万/人，带两个人，能赚毛利润 2 万元，实际上只能赚到 1 万元，因为炮神本身也要开支…… 这也不错，20 天白赚 1 万元，也蛮好的，关键是赚了经历。 中途退出一个，还剩这个女生了，炮神问我他该怎么办？ 我说，我的建议是你回去吧，你这么年轻，何必非要把时间浪费在旅行上呢？你可以把这个女生委托给腚疼，她跟腚疼走得很近，俩人形影不离了，你可以 1 万 5 转给腚疼，这样你白赚 5000 元，也不错，倘若是你坚持同行，其实相当于你也变成了消费者。 我看炮神的意思是他想跟着旅行。 下午，小姑娘又跑到腚疼车上去了，我车上只剩炮神了。 我说，你这么年轻，一定想着，你唯一的任务就是赚钱，不是旅行，不是修道，旅行是奢侈品，不适合现阶段的你，安心地回去工作吧，别折腾了，你回去了至少能赚 5000 元，你若是不回去，你要亏损，即便不亏损，也只能持平。 他问，为什么笑笑一招募，报名的几十个人，他连新疆段、西藏段的都全部被预订没了，为什么我招募不到？ 我说，因为你没有用心，不信，你非常用心地去解答别人的问题，今天下午你发个广告，看看能不能招募到？ 一下午不到，他又招募到了 2 个队友。 我说，你看明白没有？是你自己没有用心，你的意思是希望我主动帮你，对不起，这个事我是不会帮的，因为你的旅行与我没有半点关系，我只是个旁观者。 他说，明白了，过去我不够用心。 我说，现在你是一对一服务这个小女生，你觉得委屈吗？ 他说，嗯。 我说，其实你理解反了，你觉得你是一对一地在服务她，全身心地伺候她，其实她不是这么想的，她觉得恰好相反，是她给了你来这里的机会，否则你是来不了的，你们俩一共要 2 万元经费，是她出的，是她请你出来旅行了，你别理解错了。 他说，我没理解到这一层。 我说，这是她真实的心理，你知道她来的目的是什么？ 他说，不知道。 我问，你怎么让客户满意？ 他说，住好一点的酒店，吃的好一点。 我问，你觉得别人交 2 万元给你，全程人均开支是 1 万 8，你觉得她是满意还是不满意？ 他说，应该会满意。 我说，错了，不满意，因为她压根就不是来体验吃喝的，她是来工作的，来学习的，来倾听的，来寻找合作的，她要的不是吃，不是住，而是价值，是可以量化的价值，例如你来旅行需要交纳 2 万元，但是我保证能帮你赚回去 2 万元，这个模式就牛 B 大了。 就是说，你要超额满足她的需求。 大家真的对边境线感兴趣吗？ 应该说，整个队伍里，只有笑笑是感兴趣的，因为他需要完成数据用来众筹 G500，我对这个线路也感兴趣也不感兴趣，属于中间派，可以走也可以不走，随心而动，没有刻意目的，何况我的工作就是写作，我需要素材，我无论在家还是在路上都是工作，不是消费而是投资。 所以，大家不在意沿途，不在意景色，只想寻找价值，倘若组织者没有意识到这一点，那么就会曲解大家的本意，哪怕天天给他们住五星酒店他们也不开心，因为来的目的不是寻求这个的。 那寻求的是什么呢？ 价值！ 你要重新定位这 2 万元，不是消费，而是投资，既然投在了我身上，那么我应该为其带去什么价值？ 美景？ 美食？ 美人？ 还是其它？ 大家寻求的更多的是圈子，是信息，是互通，还有一点，就是大家能否与你共享你的人气？ 昨天，炮神在副驾驶位置拍照，他的手机总是上扬的。 我问，你咋喜欢拍天？ 他说，拍低了不就拍到前面的车子了吗？ 我笑了。 人有一点特别有意思，就是不愿意共享自己的”人气”，我凭自己本事积累起来的人气凭什么分享给你们？我拍的照片凭什么要出现你们的车子？你们车子上有你们的广告。 都会这么想。 其实，这么想是狭隘的，因为粉丝不属于任何人，他们既可以关注你，也可以关注别人，你不要觉得他们属于你。 也不会因为关注了别人而不再关注你。 要积极分享人气给你的伙伴、你的支持者，不要做一个被施舍者，而是要做一个施舍给别人的人，这样你才更有大爱。 这是董明珠最近演讲里的一句话。 她说，人不要总是试图想着朋友能来雪中送炭，人喜欢锦上添花，不喜欢雪中送炭，你有这个想法本身就天真了，人一定要足够强大，自然会吸引朋友前来锦上添花，还有就是不要轻易接受别人的施舍，而要做一个主动施舍者。 我问炮神，你明白我的意思了吗？ 他说，明白了。 我说，谁跟你，你就推广谁，愿意跟随你的人越来越多，别说你收费 2 万元了，假如你能做到一点，你交多少钱能帮你赚多少钱，哪怕你说东北行收费 10 万元也无数人报名，当然这不是空头支票，而是货真价实，真有实力才行。 他说，过去我理解错了，总觉得伺候好就行了，吃好，住好，其它的没想过。 我说，那是你天真了，如果真的是为了出来旅行，为什么不选旅行社？她明明喜欢吃香蕉，你非往她嘴里塞苹果，口口声声地说，苹果有营养，苹果美白，苹果富含维生素 C。 你就是富含维生素 W，她也不想吃，只是想吐。 UC 浏览器里有一句口号：给的再多，不如懂我。 炮神问我，做旅行，最重要的是什么？ 我说，两点。 第一、绝对安全，不挑战概率，至少不让大家心里打鼓，总感觉随时会掉下悬崖，我们可以探险，但是不能冒险，你有没有想过一个问题，我们这次出来可能真的回不去了。 他说，没有。 我说，其实是有这个概率的，我出门前把家里的事都交代了一遍，包括银行卡密码之类的，不是说这次才这么做的，我每次出门都这么做，因为我可能真的就回不来了，不仅仅是安全性的问题，还有概率问题，在家也有突然死亡的概率，例如地震了，楼上爆炸了，坐公交车自燃了。 因为我有这个预警意识，所以我更加的谨慎，不挑战大自然，不挑战我自己，我需要知道自己哪里能，哪里不能。 他问，董哥你看我的安全意识如何？ 我说，心到，手没到，就是你有这个意识，但是开车时未必能做到，因为你拿证才一年，有些经验必须是靠实战出来的，理论再丰富也不行。 我跟在腚疼车后，经常性地看他的车屁股扭动，我总是嫌弃他开得不够好，小胖跟我讲，不单纯是开车的问题，也有车子本身的问题，车子没有方向机，也没有 ABS，在冰雪路面上一点刹车就抱死，或左或右，他们的车子以前我也没开过，小胖说了我还不信，我借来腚疼的车子一试，猛的一刹车，轮胎接着就有抱死的，车子左右扭动…… 我又回想了一下下午笑笑发生的那一幕，其实也许操作是正确的，心到了，手到了，但是车没到，车子构造太简单了，基本上就是拖拉机连杆式的方向模式，方向间隙太大了。 他有个小队友叫阿猛，事后总是在旁边问：咱能不能去改装上安全气囊？吓死了，吓死了！ 其实，我认为这才是完美的经历，有惊无险，你仔细咂摸一下这个成语，多么的浓缩，多么的精华。 走了这么多天，我现在深信了一点，若是一个人能用心的去做边境线，抱着拍摄一部能流传百年的纪录片的心态去策划、筹备、行走，用上三到五年来筹备，再用三到五年来行走，再用三到五年来输出，那么绝对会成为经典的。 为什么？ 因为，它离我们太遥远了，属于我们，又不像我们，半土半洋，甚至你打开收音机全是外国台，可能这边是中国的原始森林，铁丝网那边就是外国的城镇。 关键是，没人注意过这些旮旯。 旮旯行！","categories":[],"tags":[]},{"title":"流浪汉","slug":"流浪汉","date":"2023-07-06T02:40:17.986Z","updated":"2022-12-22T09:31:07.580Z","comments":true,"path":"2023/07/06/流浪汉/","link":"","permalink":"http://www.yakjs.com/2023/07/06/%E6%B5%81%E6%B5%AA%E6%B1%89/","excerpt":"","text":"上周来了个大姐，她是东营的，主业是做石油机械的，她本身就在油田长大，又考入了中国石油大学，毕业后又进入了石油系统。 大姐是 73 年的，貌似写女人年龄不礼貌。 她找我了解”定投”。 起初，我拒绝了她，为什么呢？ 第一、我对”定投”的一切研究只是处于理论阶段，其公式是通过历史数据推出的，历史未必映射未来，我坚信公式的正确性不代表它真的就正确，因为我本身就有局限性。 第二、老百姓理财就两个结果，要么理少了，要么理没了，说白了，你我都是老百姓，这是文化属性决定的，的确有人能战胜概率，但是概率极小。 她说，不要紧，这些道理都懂，都是成年人，每个人都要为自己的行为负责。 我说，那我可以谈谈自己对理财的认识，你赔了别抱怨我，你赚了也无需回报我。 她问，你能不能推荐个朋友，代持理财？ 我说，应该有，但是我不推荐，您若是真的有需要，您自己去寻找，我不希望做这类业务的牵线人，因为理财的成功率并非是百分之百，万一赔了呢？ 她说，我不怨你。 我说，此一时彼一时，我相信你现在说的是真心话，我也相信你真赔了肯定会抱怨我，因为你在内心潜意识里会想：我是因为相信懂懂才选择的他。 她说，那算了。 我问，你有多少可以供你自己支配的储备？就是不影响你生活质量的。 她说，400 多。 我说，富婆啊。 她说，以前的确赚了不少，只是对理财没概念，没有设好防火墙，慢慢都把钱糟蹋了，买房了，买车了，借亲戚朋友了。 我们就聊了一会题外话，关于”偷油”，在油田，”偷油”是个公开的潜规则，附近的老百姓偷，员工偷，领导偷，都在偷，为什么？ 因为没人知道地下有多少油…… 不可量化的东西，那么拿点也无所谓了，上次来了一个朋友，他在油田工作，他说，单位来了客人需要招待，没钱咋办？拉车油去卖了。 大姐说，马无夜草不肥，真在石油领域赚钱的，多是做了石油贸易。 我问，你也是吗？ 她说，我是小打小闹，主要做一些低端劣质油，类似杂质油，卖到你们临沂这边，主要是锅炉油，就是烧火用的，你们这边工厂特别多，他们对油品要求不高，但是要求便宜，我们这边很多油是特殊渠道来的，所以有绝对的价格优势。 在那边，附近村民怎么偷油？直接把房子建到管道上，然后在家作业，直接把管子接到主管道上，要多少有多少，曾经有篇新闻大家可以百度来读读：《胜利油田盗油者年入千万》。 这东西是全产业链，有人专门在管道上打孔，有人专门焊接，偷陆地上的容易被抓，最安全的是偷海上的输油管道。 海上怎么偷油？ 专业的潜水员下去打孔，然后接一根管道到海面上，类似医院里的预留针，晚上开着渔船过去偷油，不是直接放，而是放半个小时休息半个小时，因为油田工作人员是可以检测到管道压力的，发现压力有异常，一会又正常了，也不会太当回事…… 就这样，可以经常偷，甚至天天偷。 事情怎么败露的呢？就是下面焊口开了，烟台那边出现了大面积的油污，当时成了很大的新闻，从而一查到底，查到了这些人。 这是警察叔叔给我讲的，他参与了审讯工作。 跟大姐谈到了这些，她笑了笑，她说这些事过去的确都存在，但是现在越来越规范了，偷油的成功率越来越低了，石油贸易竞争也越来越激烈，土炼油厂也在逐步取缔…… 我问，你对未来充满忧虑吗？ 她说，也有，因为我只熟悉石油领域，未来十年我肯定赚不到过去十年那么多钱，甘蔗最甜的一段肯定没了。 我说，前几年，为什么那么多化工企业都倒闭了？是不是与油价降低有关？ 她说，有关系，但是关系不大，因为化工厂的本质是工厂，就是把原料加工成产品，他们赚的是加工费，可是为什么破产了呢？因为他们对这个行业了解太深，很准确的知道某一种原材料的成本价，一旦低于成本价他们就会拼命地囤货甚至炒期货，因为他们坚信会反弹的，会涨的，例如黄金跌破开采成本了能不涨吗？道理是这么个道理，实际上呢？8000 元一吨的跌到 6000 元时就有一批进入了，到 4000 元时已经跌破成本价了，大家蜂拥而上，后来呢？到了 2000 元。 我问，你为什么没炒？ 她说，我也炒了，但是我止损了。 我说，能靠理财赚到钱的人，一定不是靠技术，也不是靠内幕，而是靠修行，靠德，否则即便赚到了钱，最终还是会再扔进去，德不配位。 她说，我表达的意思是我有止损意识，你不用担心，我炒过股票，炒过期货，赔过不少钱，赔出最大的经验就是止损。 我说，最近我想了想，我觉得还是牛哥的那个定投方式更有意思，例如选准一支指数基金，例如沪指、创业板，这些都可以，可以按月或按周定投，例如我每周可以有 1 万元的闲置资金，我计划定投 10 年，10 年后，每周定赎相应的股数，等于每笔资金都在股市里浸泡了 10 年。 她问，有没有可能 10 年后亏损？ 我说，完全有可能，但是你要对比的不是单期，而是 10 年之和的对比。 她问，你觉得这个模式有什么缺点？ 我说，枯燥，等于你一直在投入，从来没有见到回报，毕竟要让我们等待十年，太漫长了，对于普通人而言，这几乎是不可能完成的，而且这中间要经历过 N 次股灾，甚至当我们投到第 8 年时，股价还跌破了成本价，我们会怀疑人生。 理论是非常完美的，实际上很难做到，定投是对人性的绝对挑战，人性是渴望立竿见影的，我以为我能挑战这个概率，我试验了一段时间，放弃了。 这个姐说，这个思路很完美，我回去试试。 她这个年龄，应该有这个定性。 前几年，我收入也不错，但是不攒钱，手里能有个十万八万的，当然我自己认为自己是蛮牛 B 的，毕竟流水非常可观，认为自己属于富人系列，可见我是多么的 LOW。 后来攒了点钱，是因为拆迁赔了 200 来万，是一次性的，就存起来了，我觉得自己是能驾驭了这么多钱的。 实际上，还真驾驭不了。 我用这 200 万研究过定投，给自己写了严格的计划书，每周定投 2 万，用两年的时间完成基础定投，按照我的公式去推演，最保守的结果是 10 年翻 3 倍，也就是 200 万变成了 600 万，不过要到 2026 年。 按理说，这是一笔很不错的理财吧？等于我每年多赚了 40 万，不是白拣的吗？ 实际上，在执行的过程中，我会多次动摇，这就如同狼抓到一只羊羔，能有耐心等它长大吗？总是惦记着怎么处理这笔钱。 买房子？ 买车子？ 别，别，别，不是说好要做定投吗？ 一方面，定投在有条不紊地进行中，一方面我又在四处看房子，看车子，看了房子很冲动，看了车子也冲动。 一这么说，读者们就蛮失望的，你看看，我们追了一个作者，他竟然这么 LOW，给他 200 万他就不知道该怎么处理了，我还以为你有几个亿呢。 前些日子，我去参加婚礼，旁边一个小伙回去跟他朋友讲：我见到懂懂了，他应该有几个亿吧？ 哈哈~~ 本地有几处别墅小区，一套房子动辄卖三四百万，前几年我也去逛过，但是我只是单纯的逛逛，是为了勾搭妹子，千万不要低估了售楼员，现在的售楼员都是高学历，高颜值，动不动就是硕士，但是呢，咱总是胆怯，生怕被识破，装的也不像，时间久了，妹子也不热情了，因为她们看穿了你。 可是我怀揣 200 万，我本身还有 200 多万的信用额度，我是可以随时拿出 400 万现金的，我看别墅是真的看，真的想买，不就是 300 万吗？我能买得起，还不用贷款…… 人的底气变了。 别墅就那么几套，怎么买？ 你想买？对不起，请排队，怎么排？先交 50 万的意向金再谈，我立刻就交上，我是表达一下我的诚意，是真想买。 这边别墅有点夸张，院子 600 平，什么概念？ 一亩地！ 我在想，我种点菜，种点花不好吗？我还可以养几条狗，甚至我可以种上果树，供大家采摘…… 就是在排队选房时，认识了一个做饲料的哥们，他本身住别墅，他还有三套别墅，普通房子也不少，我们俩接触了几次，就成了表面上不错的朋友，因为还没有深交，他总是问我职业，我说我是无业游民，他嫌我忽悠他，他说无业游民还用苹果手机？ 彼此加了微信，喊着一起吃饭，我们俩的目标一致，就是要独栋，因为独栋是不可再生资源，再过 50 年能住独栋别墅也很牛 B 的，越是大家买不起的，越是大家梦想的，越要投资，是我们先帮你们买下来，等你们赚到钱了，想住的时候，我们再卖给你们，你别嫌贵，除了我这里有，别的地方没有。 最初说是独栋卖，后来又说不卖，可能是留到最后压轴，也可能是留给领导们的关系户。 牛哥是不建议在三四线城市买房的，因为人口增量太小，缺少接盘侠。 这哥们的观点是什么？ 普通房子不值得持有，但是带院的房子必须买，只要有楼盘准备开，他马上就去售楼处咨询，问有没有带院的，有，马上买…… 他说，带院的房子，持有三五年就能翻一倍的价钱。 他现在住的别墅是联排，80 万买的，现在卖 150 万了，前后两三年的时间，他的这个观点我一听，很有道理。 咱闲着没事，为什么不在本地研究房子呢？跟着炒炒房子，一年也能赚个几十万，完全是拣的钱。 后来，别墅我没买，去青岛买了普通楼房，我是看中了送户口，我不想让孩子跟着我继续农村户口了。 折腾了一圈，钱没了，感觉又老实了，也不想定投了，也不想别墅了，也不想豪车了，什么都不想了，很安静，又回到了从前。 牛哥建议我把资产全部做抵押贷款，就是把死的资产变成活的，把房子变成蓄水池，钱多的时候就多买房子，钱少的时候就从房子里拿钱出来，先把抵押手续做好，但是要求不放款。 这样，我又有了这么多钱，但是我没要求放款，不放款不产生利息，现在银行贷款利率太低了，当然理财产品更低，我今天去银行办业务，1 年期限的理财产品，200 万起购，年息只有 3.5%，200 万付你 7 万元利息而已。 我通过觉察内心，我就在想，我算是非常有毅力的男人，可是我依然会变来变去，我 2 月份开始定投的，到了 6 月份赚了 5%，全部卖了，因为想买别墅嘛，一直折腾到了 9 月份，又开始重新定投。 连我都很难坚持，别人更难，当然可能别人比我有毅力。 我看到有读者在做定投培训，我就劝他们，别去随意怂恿别人做定投，坚持很难，你自己未必能坚持，当然你每个月只投 100 元，那无所谓，我是每周投入 2 万元，一年就要投入 100 多万，这些钱对于我而言，比例太重，倘若投入太小，我又不重视，又失去了理财的意义。 我就觉察自己这几个月的内心变化，感觉咋这么陌生呢？这么浮躁？总感觉自己屌炸天了。 跟我一起做定投的，坚持下来的收益率都非常可观，可是，他们使用的都是虚拟帐户，就是说，钱是假的。 钱是假的，心态又是另外一回事。 定投有多难？ 很简单的一个例子，你坚持每天跑步 10 公里，每天严格控制饮食，你觉得你能瘦下来吗？ 这就是定投，道理都懂，模式都认可，只是，做不到！ 我现在稍微沉淀一些了，去年太浮躁了，一口气买了三辆车，现在我又很少开车，一辆车只跑了几千公里，想卖掉吧又觉得亏太多，不舍得，只能继续放着，白扔了 100 多万。 德不配位。 但是，这也是很完美的经历，使我觉察了自己的内心变化，我以为我自己做到了荣辱不惊，不以物喜不以己悲，其实差之甚远，还需继续努力。 从另外一方面，自己进步也很大，例如过去很羡慕别人有好车，我现在很少羡慕，我自己也不是很讲究这些了，平时去打球，我就开个破皮卡去。也不羡慕别人住别墅了，球友住别墅我也不会高看他一眼。就是说，我学会了平视别人，不献媚不嘲讽。 每年，若是安心写文章，也能养活一家人，应该也处于小康水平，可是我不安心，总是红眼病，看别人赚钱那么容易。 例如大家随意出来喊一嗓子，就能喊个百十万，这对于我而言太不公平了吧？例如我写个成长俱乐部，劲松在下面一喊，接着就喊来了 100 多万。 我写文章，一个月赚个万儿八千的，全靠大家打赏，跟街头卖艺似的，前面摆个破碗，多么辛苦，每天要写 7000 字，为了这 7000 字要准备上四五个小时，书写上三个小时。 我被大家搞浮躁了，也想赚钱，但是我又没有精力，有个作者写过，他每天写完文章是一身大汗，整个人都虚脱了。 我没这么严重，但是也会觉得身心疲惫，躺在椅子上一动也不想动，什么事也不想了。 笑笑在众筹一辆奔驰 G500，在我的概念里，这个车也就是 150 万左右，我”女朋友”有辆，当年买来装 B 的，至少是把我忽悠得团团转，光我不给她忽悠了上千人个客户？ 我带着笑笑去保税区看车。 G500 报价 170 万，关键是没有车，全国范围内都没有车，这个车的特点是什么？ 只要展厅里有车，马上就会被提走。 想买，必须加价，至少要加 15 万吧？有的 4S 店只加 5 万，但是要半年提车，而且笑笑喜欢白色的，白色的几乎没车。 我一算，原来这么一辆车要 200 万，怪不得这车走到哪都是焦点，很多人买车也是为了圈子，G 友会，毕竟都是高大上群体，N 多明星开这车。 买进口车有两个渠道。 一是保税区，主要是天津港。 二是 4S 店。 两者有什么区别？ 区别最大的肯定是价格，若是不考虑价格，我们肯定选择 4S 店，我以前写过韩国人带车过来卖，现在依然有这个业务，叫：外商自带。 但是海关有一年的监管。 例如 170 万的车子，我可以挂在外商身上，一年后再过户给我，就可以省掉购置税，这期间车子一直都在我手里，只是车子的身份要变化一下。 拿 G350 举例，这车跟 G500 基本一致，只是柴油发动机，官方报价 160 万，保税区报价是 130 万包牌，省了至少 30 万。 若是想直接挂在自己名下，那至少还要再加 10 万元。 我说的这是青岛保税区。 天津的呢？ 3 个月就可以过户，因为他们会帮你挂到东北，然后再过户到你身上…… 车子、手续，安全性都没有任何问题，本身还有第三方监管，唯一的问题就是你是否在意你的车子是头婚还是二婚。 笑笑不考虑 G350，他不喜欢柴油车，我开过柴油大马力，对这个发动机还是蛮熟悉的，柴油车的优点就是省油、劲大，一箱油续航里程动辄就超过 1000 公里，就是 G350 的油耗应该也超过不了 11 个油。 但是国人不是很喜欢柴油车，因为柴油车动静比较大，还有一点就是加油比较麻烦，加油站用的柴油枪多是大口的，加小车太费劲，还有就是柴油车需要加尿素，不仅仅要加尿素，还需要加水。 从越野角度而言，选 G350 不选 G500。 从声浪、提速而言，还是选 G500，G500 是 V8 的发动机，一加油门有跑车的感觉。 两者上路价格要差了接近 70 万。 在保税区汽车城转了两圈，我也蛮心动的，心想有这么一辆车子也蛮牛 B 的，可以去混圈子了。 昨天，来了一群做旅行的，有自驾的，有刚从 318 骑行归来的英雄，笑笑挨着大家问，愿意赞助不？ 大家纷纷解囊。 原来，人们真的愿意赞助别人的梦想。 使我想到了另外一点：众筹需要主动，就是主动去问，你愿意赞助我的梦想吗？而不是等待。 其实想想这真是一件很了不起的事，开着一辆 200 万的车子，有时你逛一个地下停车场，都未必能发现一辆 200 万的车子，当他真的提车时，应该众人看他的眼神又变了。 318 骑行归来的人，真的是英雄，至少我是这么认为的，因为我做不到，我自驾过两次 318，我每次走完都发誓再也不走了，那就是一条死亡之路，每个活着回来的人都能讲述自己差点丧命的经历，318 平均每天死亡一个人，我们能幸免真的很不容易。 但是，骑行进藏的人会上瘾，例如他们会骑行八条进藏线，每年挑战一条。 那么，会不会有人把 318 变成骑行界的达喀尔呢？ 一定会有人。 据说，已经有人这么做了。 人对探险、挑战有着天生的斗志，桌上，大家一起举杯敬郭川，哪怕他失去了生命，我也认为他是个英雄，因为他知道自己为什么而活着，去追梦了，比我们这些缩头乌龟强了太多。 达喀尔骑行应该怎么做？ 每日从成都发枪一次，每辆车子都安装定位仪，只要出现搭车就被取消资格了，第一名进藏的可以获取 1 万元现金，凡是能达到终点的，都将获得奖牌一枚，全程都有志愿者服务站，每个人要为自己的人身负责，必须购买保险才可以参加。 例如，一共发车 60 天。 会产生 60 位冠军。 发出去 60 万的奖金，但是获取的是无数人的关注…… 专业骑行的，从成都到拉萨的骑行时间为 77 小时，想想多么恐怖吧？只是骑行时间，不包括睡觉吃饭，我开车都需要用接近 50 小时。 越是玩命的，越是刺激的。 这两年，挑战四大无人区的越来越多了，为什么深圳特别多，因为深圳是年轻人的天下，而且是有钱，就跟我这么大年龄的，拥有 500 万以上资产太正常了，有套房子就 500 多万，所以大家有资本玩，不用说别的，在深圳打羽毛球，一小时要 100 元，办个牛 B 一点的会员卡都要 5 万多。 穿越四大无人区，遇到年轻团队，一问，深圳的。 为什么？ 他们年轻，有活力，有探险欲，有挑战欲，又有实力。 我们为什么不愿意去挑战？ 因为，我们还没达到那个 LEVEL。 所以，我们只能在家关注一下《侣行》，他们前些日子刚穿越了四大无人区，最近又在策划开着飞机环球旅行。 他们其实就在拍摄《速度与激情》系列，从 1 拍摄到 7，速度与激情其实是拍摄给全球车迷看的。 观众们已经喜欢上《侣行》两口子了，他们现在每年的广告收入就已经过亿了。 自驾，未来也会朝三个方向发展： 第一、深度穿越，例如沙漠、无人区，具有半探险性质的，有点类似 90 年代中国科考团去考察可可西里，有时我在想，假如交 10 万元可以跟着他们两口去穿越可可西里，我就报名，就是想感受一下他们的气场。 第二、境外自驾。 第三、高端车友会，纯粹是玩圈子，例如可以搜索一下：路虎卫士年会。 开着 G500 去拉萨，每人收 5 万元，有人去吗？ 我认为肯定有，因为我们以前开着 GL8 去拉萨都收这个价，照样报满，有钱人太多了，大家不是怕花钱，而是怕你服务不好，当时我们全程五星酒店。 牛哥说过，两种旅行是不需要动员的，就是人人想去的。 第一、拉萨。 第二、第一次出国。 几乎人人都有拉萨梦，笑笑说，他是提前一天发布的去拉萨计划，结果至少有 20 个人联系了他，想跟着一起走。 最终，他只带了三个。 炮神在这边玩了几天，也组织了一场拉萨行，昨天已经到拉萨了。 拉萨，真是不管什么季节，不管什么时候，都是有人愿意去的，而且都能赚到钱…… 笑笑的想法是每年做 10 条线路，每次带 20 个人，每个人收 3000 元服务费，一年也能赚个六七十万。 这个我是赞同的，因为这就是我六七年前的玩法，只是我结婚了，生娃了，我不想跑了，例如组织人去拉萨，全程 AA，每人交 3000 元服务费，只带 20 个人，瞬间就能报满。 这个季节可以组织环驾鸡头，也就是整个东北，雪地穿越太有意思了，2011 年我穿越了一圈，太爽了。 这个季节还可以骑行海南，你做好服务，提供车辆，让我们安全地环骑海南，每个人交 3000 元服务费是没有任何问题的。 而且一年比一年顺利。 回头率非常高。 但是，这些都需要有个前提，组织者必须是一个喜欢旅行的人，而我不是一个喜欢旅行的人，这就是问题的关键。 若是我很喜欢旅行，我每个月带队一次，我光靠这个，一年赚 100 万没有任何问题，可是我不喜欢见人，不喜欢出门。 对于这些商业模式，我是直接的践行者，我从来都不怀疑，大家都喜欢出去玩，但是需要找到同频的人，例如深圳那边有人专门组织全球游学，他怎么招募队员？去混摄影圈子，寻找目标客户，今年寒假还组织去清迈亲子游学，我媳妇跟我儿子也报名了，所有费用自理，然后再交给他服务费，我媳妇昨天刚把机票买好了。 服务费的模式是最好的，赢利的非常透明，那么就不会在一些细节上做手脚，反正都是大家 AA 花钱，他只赚他应赚的就可以了。 昨晚一起吃饭，腚疼也想做旅行了，貌似拉萨是可以放大一个人的信念，他回来总是感叹中国真小，另外他受炮神刺激了，因为他坚信炮神招不到队员，没想到招满了，他有些心理不平衡，因为他跑到我们这里来时，想做的第一件事就是组织拉萨行，当时他还发誓 8 月 1 日前一定去拉萨，不过最终失败了，如今他去了一趟拉萨，感觉旅行也就是这么回事，蛮简单的，而且赚钱的确容易，想搞搞，何况在我这边的每个人都自带粉丝，招募队员不是问题…… 这个季节要么是去东北，要么去海南。 我认为最值得做的是环骑海南岛，你提供保障车，联系租车，海南那边的自行车店都提供租车业务，30 元/天，环岛大约需要 10 天时间，所有费用 AA，额外每个人给你 3000 元服务费，这个是最简单的运营模式，也最透明，你也是有资格拿走这 6 万元的，因为你要跑前跑后。 这些事是这样的。 不是谁牛谁做。 而是谁做谁牛。 余欢只是做了一个谁都能做到的事，现在走到各地都被当英雄去接待，他前天到武汉，接近 50 个人约见，甚至还有电视台的。 大家都纷纷给他贴上了”环驾”的标签。 其实，他只是溜达了小半圈而已，准确的讲，他哪是环游中国，不过是川进青出，从青海湖又跑到了乌鲁木齐，就回来了。 不过，他真赚了百十万，沿途还开光了一批佛珠，用不了多久，应该就开售了。 余欢尝到了甜头，在考虑买牧马人还是 G500 了，他要进军深度穿越的圈子，去那里混，我推荐他研究越野 E 族，现在天天泡在上面…… 旅行是成名的捷径。 但是，旅行的门槛太高太高，钱，时间。 于是，我们只能看看，看看别人的表演，一群流浪汉就这么成了我们的偶像。","categories":[],"tags":[]},{"title":"色","slug":"Q7oyfaOu8Ii_5RQqs4RMPQ","date":"2023-07-06T02:40:17.985Z","updated":"2022-12-22T09:31:04.358Z","comments":true,"path":"2023/07/06/Q7oyfaOu8Ii_5RQqs4RMPQ/","link":"","permalink":"http://www.yakjs.com/2023/07/06/Q7oyfaOu8Ii_5RQqs4RMPQ/","excerpt":"","text":"来我这里的男人，普遍变色。 为嘛？ 寂寞。 我每天只能下午陪着打球，绝大多数时间都需要他们处于独处状态，那咋办？ 只能摇微信了，否则也太无聊了。 更有甚者，提前用软件把微信定位到我们县城，联络好了妹子，来了直接有人陪，走了就分手，也有演戏演的很真的，认真谈恋爱，谈了几天就去女方家里了，女方当真了，七大姑八大姨都出来了，要帮着相相…… 来了这么多男人，目前没有出轨记录的只有笑笑了，笑笑说自己是性冷淡，对女人不感兴趣。 这些女人，也是良莠不齐。 有素质高的，有素质低的，有公务员，有老师，有护士，也有混社会的，曾经遇到一个女孩，整个背都是纹身，她穿着吊带，露着一半，是仕女图，夜场的公主。 伟哥泡妹子特厉害，先搜附近的人，然后直接发红包，每人先发 10 块钱，妹子自然对其有好感，聊着聊着就出来了。 最初，伟哥过来住宾馆。 后来，都住妹子们家里。 其中有个姐姓毛，一看就是读书人，戴个眼镜，非常斯文，年龄 40 岁左右，老公在边疆，两地分居，这么正经的人咋也被伟哥拿下了？ 孩子读初中了，住校。 所以，伟哥每次来，直接都去家里住了，据伟哥介绍，这姐特会照顾人，还打热水帮着洗脚。 这女的，干什么的？ 老师。 至于在哪里教书，教什么的，这些咱从来没问过，毕竟她身份尴尬，不希望我们了解太多信息，伟哥可能了解的比较多，我们在一起吃饭时，我从来不多问…… 我不支持，也不反对，自由交往，每个人都有爱的权利，道德是社会行为，爱是个人行为。 有次，无意提起了跆拳道，她儿子要学。 我说，那找我吧，我表弟是跆拳道教练，在本地开了 10 年，三家店，算是做的最好的了。 她问，是亲表弟吗？ 我说，舅舅家的，亲的。 她问，多少钱？ 我说，不用给钱，我给说说就行。 饭桌上说的，我也没往心里去，过了几天，表弟联系我，说我有个朋友的孩子去那边报名了，多给了 100 块钱。 我问，为什么多给钱？ 表弟说，她说不知道教练喜欢抽什么烟，所以给 100 元自己买吧。 我说，真会办事。 这女的会办事，什么行业的人最擅长给老师送礼？ 当老师的！ 我以前是拒绝给老师送礼的，我姐姐们总是劝我，认为该低头的时候必须低头，再看看他们呢？逢年过节都要去老师家，要当成大事，非常认真。 我二姐经常跟我讲，孩子学习成绩好坏，老师起到了 80%的主导因素，一个班 60 多个孩子，凭什么重视你？你就需要给老师这个理由。 有次，伟哥在微信上找我，问我本地谁家卖硅藻泥，那姐的房子装修，要买，不知道买谁家的，听说我用过，所以找我。 就这样，那姐联系上了我，加了微信。 我开车带她转悠了两圈，看了几家硅藻泥，一来二去我们就熟悉了，我慢慢知道了她的一些家庭背景，非常传统的一个女人，我问她为什么会喜欢上伟哥？ 她说，我自己也不知道是咋回事，那天我喝酒了。 我问，伟哥哪点吸引了你？ 她说，跟他在一起有安全感。 她家境很不错，房子是复式的，说公公婆婆年龄大了，计划接过来一起住，老公也准备回来，要重新收拾收拾。 我去日本，她让我帮她捎个包包，二手的，LV，3000 来块钱，男人和女人的眼光不同，我看了一圈，没有入我眼的，我没帮着带。 回来，我跟她解释了一下，我怕买回来她再不喜欢，送了她一个洗衣球，就是放在洗衣机里不用洗衣粉那玩意，现在微商上不是很流行吗？ 儿子面临着择校的问题，我们家与重点小学划片正好隔一条街，郁闷不？那就需要找人，我找谁？ 平时挺牛 B 的，此时找朋友，大家给出的答复都是模棱两可，而我需要的是准确答案，就是 YES，花点钱无妨，我的心理价位是 2 万元。 我让二姐去办这个事。 二姐也不能给我准确的答复。 我想起了伟哥的那个姐，我联系她，问她：明码标价，我出钱，你帮我问问，多少钱能搞定这个事？ 她说，咱这边划片都不严格，不是很难操作。 我问，大约需要多少钱？ 她说，两三千块钱吧，买购物卡给管事的就行。 我说，你帮我活动活动。 她说，找我的话，不用给钱。 事情原来如此的简单，事后，我送了她一个 LV，新的，钱包，8000 块钱，我在迪拜买的，给媳妇买的，媳妇不喜欢。 她过意不去。 我说，伟哥给买的。 她收下了。 后来，我单独请她吃过饭，表达了谢意，顺便问了问夫妻感情，俩人是大学同学，她家是江苏的，跟着老公过来的，大四实习的时候，她怀孕的。 我问，你不怕被老公抓到吗？ 她说，岂不是正好吗？公平了。 我问，他外面有人了？ 她说，我没抓到过。 我问，有还是没有？ 她说，女人是有直觉的，有，我问过，他承认，但是我能理解，毕竟一年在家里待不了几天，常年在外。 我问，你这是第一次？ 她说，以前有过喜欢我的男人，有过亲亲抱抱，但是没有实质性的，伟哥算是第一个。 我问，后悔吗？ 她说，谈不上，有些时候自责。 去年，她老公回来了，因为生病了，直肠肿瘤…… 伟哥再也没联系上她。 我也再也没联系上她，微信把我们拉黑了，偶尔在学校里遇到，也只是点头打个招呼，不会多说一句话。 她又回到了原来的模式，一个贤妻良母。 我不知道该赞美她的忠贞还是批判她的背叛？ 我是真的很理解她，本性善良，换作别人处于她的角色，可能早离婚了，要么私奔了，以前孩子在家住，焦点都在孩子身上，孩子住校了，她觉得自己太孤单了，仿佛被整个世界遗忘了，于是她渴望有人关心她。 感情的事，旁观者迷，当局者清，我们都是局外人，莫去批判什么，也莫去规劝什么，因为他们是听不进去的。 有个球友，临沂大学的，21 岁，今年毕业，男朋友今年 35 岁，公务员，离异，俩人打球认识的。 21 岁的球友老家是濮阳的。 她问我，该咋办？ 我说，其实你内心有答案。 她问，假如是你亲妹妹，你会给出什么建议？ 我说，我会告诉她，听从父母的。 她说，我爸妈让我回去。 我说，其实你是不想回去的。 她说，是。 我说，婚姻方面，父母对孩子的规劝多是对的，但是做儿女的没有听的，没有得到父母祝福的婚姻，多以悲剧收场。 她说，我什么都明白，就是放不下他。 我说，这就是你的命。 她说，他现在催着领证，我不知道该不该领。 我说，我不知道。 其实，我是鼓励试错的，女生在保护好自己的前提下，谈的恋爱越多，越懂男人，越明白自己想要什么，越会幸福。 越是感性的，越容易受伤。 女人一旦选错了男人，将痛苦大半辈子，因为离婚那一瞬间，你就贬值了，小穆就存在这个问题，她月收入 5 万多，只谈过一次恋爱，领过证，婚史特短，但是再谈男朋友，男人很介意这些，想找同龄的？太难了！ 当然，每个人都有自己的命。 等我们的孩子长大了，不婚将成为常态，因为人们越来越自我，中国目前的社会还处于没有”自我”的阶段，”自我”是个奢侈品。 高晓松、王思聪都是高度自我的人，他们都不适合结婚，婚姻只能压抑他们的人生，而不会使他们的人生更加的绽放。 他们是先驱者。 昨天，我去蒙娜丽莎看瓷砖，是一个球友代理的品牌，中午闲聊时，提到了建材市场的一个老板，他闺女读博士了，定居北欧了。 这个事对我触动太大了。 因为，这个老板跟我爹是同龄人，而且是从小一起玩大的，我们村的，当年跟我爹一起都在村里当干部，那时流行照合影，我家还有他们的合影。 后来，他是我们村的首富，我们镇的首富，再后来，他进城了，做地产去了。 我爹，两个闺女一个儿子。 他，也是两个闺女一个儿子。 我们的差距有多大呢？ 天壤之别，至少又拉开了一代人的距离…… 所以，我们的崛起对于家族的改变有着绝对的意义。 蒙娜丽莎的老板比我大两岁，生意做的蛮大的，腚疼很好奇地问他：你是咋创业成功的？ 他说，我是带着 6000 块钱回来创业的，当年咱这边没有品牌砖的概念，我坚信这个市场，慢慢做起来的，刚开始我连工人都没雇，自己去施工。 饭后。 腚疼跟我讲：原来创业者的经历都差不多。 我说，你理解不了那种痴迷和信念吧？ 他说，理解不了，但是我想赚钱。 我说，我没感觉到你的姿态，但是这些创业者身上都有姿态。 他问，你觉得创业者最需要的是什么？ 我说，天赋！ 他说，我今天很受鼓舞。 我说，创业者受的苦是上班族永远都无法理解的，你以为你能受的了，那只是你以为，一天你都受不了，别轻易创业，你不是那块料，这一点你必须认。 他说，我不认输。 我说，嘴上功夫好，白搭。 他问，如果我喜欢开车，有没有适合这个领域的？ 我说，可以做安全驾驶。 2011 年，我写了一本安全驾驶的电子书，当时在天涯上连载是头版头条，一天有过百万的访问量，读者层次非常高，至少是有车一族吧？ 我看到了这个市场。 我就怂恿大家：谁若是有兴趣，可以拿去署自己的名，出版。 有兴趣的一大堆，但是都不持久，有的可能也跟出版社签定了出版合同，但是出版社觉得内容太少，不够一本书，需要添加一些，就没有后续了，因为他懒的添…… 我坚信这本书是有市场的，因为我喜欢驾驶，我喜欢钻研，又比较有安全意识，关键是又会写。 还有一些朋友，是想出，但是不好意思，毕竟是我写的。 我的建议是，可以翻写。 我自己为什么不出版呢？ 一方面，愿意出这本书的出版社多是北京的，而我是属于广东出版集团的签约作者，我不能随便跨社出版，不是说不可以，而是不道德，等于背叛了师门，毕竟是小躺老师发掘了我。一方面，我的身份是写日记的，若是去做安全驾驶，容易混淆身份，别人搞不懂我到底是写日记的还是搞驾驶的。 南昌有个大学老师，叫梦飞，她想做这个市场。 当初，我没有特别看好她，为什么呢？我觉得她开车技术一般吧，她喜欢开，但是还没有痴迷到我们的地步，我痴迷到什么地步？ 刚买了新车，我坐在车里待了一晚上，想睡在车里，但是没睡着，就是喜欢…… 例如我从欧洲回来，我到了家，跟媳妇打个招呼，我就急忙到地下停车场，挨着把车子启动一遍，开着出去溜达一圈，仿佛跟久违的情人们缠绵一番似的。 我没觉得梦飞能捣鼓出多大的动静，毕竟是女孩子，未必喜欢车。 过了差不多一年，她出版了第一本书，我翻了翻，内容大部分都是自己原创的，部分采纳了我的，可见她是真心下功夫研究交规法了。 后来，我发现她的人气超过了我。 现在，她随便发个说说，就是几万的关注量，而且全是车主，这是高端群体，消费能力一流。 最近，我看她又出新书了，淘宝上卖 70 到 500 不等，只是套餐不同，月销 1200 件，猛吧？ 她是我带出来这么多读者里，唯一一个人气超过我的。 但是，反过来一想，已经过去五年了，说明她坚持了五年，而且高度聚焦，现在已经推出视频版了，各大头条关于安全驾驶的视频，多是她拍摄的。 前些日子简单聊了聊，收入方面也超过了我。 她的粉丝层次非常高，越是有钱人越有安全意识，一个开面包车的人是不会花钱学习安全驾驶的，北京有安全驾驶培训班，7 万元学应急驾驶，去参加培训的多是企业老板，让咱想想，学个驾驶至于花 7 万元吗？都能买辆捷达了。 以前，咱对人家可能爱搭不理的，如今不同了，咱要仰望了。 每个细分领域做到极致，都不得了。 那么，这个市场有没有机会弯道超车呢？ 有！ 现在的我比过去的我，安全经验肯定更多了一些，这期间也发生过一些小事故，安全意识越来越好了，若是我现在再去指点一个人写安全驾驶，肯定很全面，而且很有深度，我能从根源去分析这些现象。 只是我自己懒得进入这个领域了。 弯道超车的前提是什么？ 标签超车。 例如环驾中国，全程 3 万 6 千公里，零事故…… 那么，你就有资格去写这本书了，你写出来大家也相信，因为你是有标签的人，那天余欢过来，我跟他也谈过，路上不断地拍摄一些与安全驾驶有关的视频，例如可以安装高清版的行车记录仪，专业级的。 未来，写这么一本书。 不会跟梦飞有冲突，市场是大家的，谁都可以做，不能说联想做了电脑，DELL 就不能做了，每个人都有自己的核心竞争力，只要你是毫发无损的回来了，那么你就是最有资格写这本书的人。 我认为，这是环驾中国最值得做的一件事，就是出一本关于安全驾驶的书，这也是一种慈善。 既然环驾一圈，那么就要把利益最大化。 例如还可以干什么？ 全程选出 108 个寺院，去开光 108 珠的佛珠，可以从队伍里挑选出两个人，每到一地，他们俩就去干这个事，每一串佛珠都是有故事的、有阅历的。 这样的佛珠卖 999 元一串，也不贵。 为什么？ 它的概念不可复制，有西天取经的感觉，毕竟是经历的千辛万苦，我预测光佛珠能产生 150 万的利润。 为什么佛珠一定会畅销？ 因为，游记在后面做支撑，一定能卖光，只是时间长短而已，可能瞬间没了，可能一个月才卖完，可能三年才卖完，无妨。 还可以干什么？ 还可以拍卖景点，例如沿途 100 处景点给卖了，卖手持广告，例如每个广告 5000 元，不贵吧？ 每到一地，派两个人去完成这个任务，例如到了青岛，两个队员去崂山拍摄广告，写游记的时候，把照片加进去，起到了品牌宣传的作用。 这样，又可以产生 5000 元的收益。 开什么车呢？ 奔驰 G500，白色的。 车贴广告呢？ 要大品牌，哪怕价格低一些无所谓，要红牛、阿里巴巴这个级别的，会使整个旅行上一个档次，哪怕他们只赞助 2 万元，无妨，要的是品牌价值。 连红牛都赞助了，别的还叫事吗？ 只要解决了红牛冠名的问题，后面 100 个手持广告瞬间就没了，前提怎么推广的这些广告？ 跟自媒体合作的，例如找鬼脚七，你帮我招募 100 个广告，我给你 25 万，咱五比五分成。 谁又会拒绝呢？ 谁要是给我 50%，我也愿意帮他招募 50 万。 除了佛珠、手持广告，还有什么点可以赢利呢？还可以每到一处搞一次团购，例如到了威海，团购一次海参，到了烟台，团购一次苹果，那就需要有两个人的团队专门去拍摄这些，把这个作为一个切入点。 边走边直播，团购的利润全部给自媒体，例如在烟台团购苹果能赚 2 万元，那么把这 2 万元当广告费找一个自媒体给推广。 每到一站，找一个自媒体。 等于自己驾驭了 N 多自媒体，把流量全部转到了自己身上，完美的借力。 每到一处，再安排一个人联系媒体，接受专访，等你旅行结束时，一搜你的名字，到处都是新闻，目的就达到了。 那么，作为组织者，你每到一处，焦点应该在什么身上呢？ 拜访当地名人！ 若是时间足够，你可以逛逛当地的高校，剧场，田间，工厂，写字楼…… 焦点不要放在景点上，因为有队员专门去拍摄景点。 游记要分两次写。 一次是由队员写的，主题是：景色+特产+直播，目标明确，就是用来做团购的，用团购的利润来换你个人的人气。 一次是旅行结束时，你按图书的标准去写的，写你每一站的经历、故事、对话，弱化风景，甚至不要出现特产团购，一方面去出版，一方面在各大论坛连载，出版社是允许的，因为纸质书和电子书的受众群体不同。 前者是普通的游记。 后者是有深度的思考。 还有什么学问可做？ 例如，可以推出你的个人品牌啊，例如腚疼牌羽毛球，每到一个城市都带着球试打，还跟当地球友来个大合影，拉着横幅，例如腚疼牌羽毛球走进漠河…… 一个品牌也顺势起来了。 问题，又回到了原点。 做这个事需要什么？ 第一、需要钱，至少要买辆 G500 吧。 第二、需要团队。 一辆 G500 即便是贷款，也要准备 80 万吧？去哪里弄这么多钱呢？那就要想想众筹，众筹最难的是什么？ 不是投资回报比，也不是概念，而是看谁给你背书。 倘若李易峰给你背书呢？ 哪怕是让粉丝白送你 1 万元，你也会收到无数笔汇款，真是数钱数到手抽筋…… 所以，你真正需要的启动资金是：一笔给自媒体的广告费，大约 3~10 万元，当然你也可以跟他们谈合作，例如利润的 50%给他们。 旅行结束后，你会收获什么？ 第一、无数铁杆粉丝。 第二、两本书，一本关于旅游的，一本关于驾驶的。 第三、一辆奔驰 G500。 第四、足够精彩的人生阅历。 第五、100 万以上的现金。 是不是有些扯蛋？ 在我看来，一点都不扯蛋，一切的核心都在于驾驭自媒体，要喂饱，只要有人帮你摇旗呐喊，赚钱本来就是易如反掌的事。 你想复杂了。 为什么你觉得很复杂？ 你觉得他们不会帮你。 那是因为你的出发点就是错误的，你希望他们免费帮你，或者你花 3000 元来博 300 万，你觉得他们是 SB 吗？ 一定要先招商，后上路，当你把钱先赚到手的时候，你才能足够的自信，我跟腚疼承诺：倘若你有绝对的姿态去干这个事，我愿意帮你招募 100 万的广告费。 他想了想，觉得扯蛋。 不是他觉得这个事扯蛋，是觉得我在扯蛋。 我们有个台湾队友，95 年的小伙子，拍了鬼脚七的广告，我忘记了 7 万还是 11 万了，都觉得他是个 SB，花这么多钱做一天广告，至于吗？结果他发起了一次众筹，赚了 150 万。 我本身是做自媒体的，对于自媒体的威力我从来没有怀疑过，我比任何人都坚信自媒体的威力。 说白了，这就是一个可以无限扩展的 IP，可作的文章太多了，其实成功案例非常多，包括旅行婚礼一炮走红的《侣行》，其实他们俩也是做的类似的 IP，过去他们出国玩，现在国内玩。 他们的一期视频的播放量都过亿。 想想多么的疯狂。 你开着奔驰 G500 的时候，你发现，你想拜访的名人突然都有些谦卑了…… 怎么众筹？ 很简单，类似入股，你愿意赞助我 1 万元，我帮你做一次植入广告，一年后，我把 1 万元退给您。 我为什么要众筹？ 只是想获取 G500 而已。 我有了 G500，后续都是水到渠成了。 蠢蠢欲动了？ 白搭！ 为嘛？ 因为，你不会舍得花几万元找自媒体去做一个连你自己都半信半疑的众筹推广的。 坚信是一切的前提。","categories":[],"tags":[]},{"title":"什么是内网穿透","slug":"VHv_902veUBwP5pOTdcMVw","date":"2023-07-06T02:40:17.985Z","updated":"2023-02-21T07:58:24.371Z","comments":true,"path":"2023/07/06/VHv_902veUBwP5pOTdcMVw/","link":"","permalink":"http://www.yakjs.com/2023/07/06/VHv_902veUBwP5pOTdcMVw/","excerpt":"","text":"什么是内网穿透 内网穿透作为程序员常用的调试手段之一，我们可以通过在个人电脑上运行花生壳或者 frp 等方式，让他人访问我们本地启动的服务，而且这种访问可以不受局域网的限制，当我们使用 ngrok, frp等开源框架时，你是否有好奇过它神奇的作用？明明没有将服务部署到服务器，程序员们究竟是怎么通过这种特殊方式让所有人访问自己的主机的？本文将以 frp 开源框架为例，介绍内网穿透的原理。 公网 IP 与内网 IP能否在公网中访问服务器的决定性因素：公网 IP 众所周知， IP 地址是每一位使用互联网的网民都会拥有的标识， IP 地址在互联网中起到的作用是定位，通过 IP 地址我们可以精确的定位到所需资源所在的服务器，这是对于一般用户来讲的，而对于程序员而言，我们需要的则是让用户通过 IP 地址定位到我们部署的资源，既然每个互联网用户都拥有 IP 地址，为什么用户无法直接访问部署在个人 PC 上的服务呢？ 事实上，IP 地址分为两种：公网 IP 和内网 IP 内网 IP ：内网 IP 是用户在使用局域网时，由局域网的网关所分配的 IP 地址，每一个内网 IP 实际上都可以映射到当前所在局域网网关的某一端口（ IPV4 地址通过 NAT 与端口映射方式实现，具体原理下文详解），拥有内网 IP 可以被同一局域网下的其他设备所访问到； 公网 IP ：内网的设备想要访问非同一局域网下的资源则必须通过公网 IP ，公网 IP 是没有经过 NAT 转换的由互联网供应商（ISP）提供的最原始的 IP 地址，每一个公网 IP 都可以直接在互联网中被直接定位到。 一个最简单的例子（以前端开发为例）： 当我们使用 webpack-dev-server 来启动一个 node 项目时，我们除了通过 localhost:[&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;]的方式以外，与我们的开发设备处于同一局域网下的设备可以通过 &amp;#x5185;&amp;#x7F51; IP :[&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;]的方式对我们的项目进行访问，但当我们使用自己的流量或者连接其他非当前开发设备所在局域网的设备使用 &amp;#x5185;&amp;#x7F51; IP :[&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;]的方式进行进行访问时，则无法访问。 原因： 内网 IP 地址仅在当前局域网下可以被定位并访问到，而当我们想要跨局域网访问时，我们的访问请求则需要先映射为公网 IP 然后访问到另一局域网的公网 IP ，最后由另一局域网的网关将其映射到相应的局域网设备，但我们访问的地址属于局域网中的内网 IP ，因此无法定位到其相应的公网 IP 综上所述，当我们想要让处于其他局域网下的设备访问到我们本地资源，必不可缺的就是 公网 IP。 相较于内网 IP ，公网 IP 明显比内网 IP 更加有用，为什么不可以人手一个公网 IP 呢？ 尽管 IPV6 的概念在几年前已经被提出，但实际的普及程度并没有很高，现在大部分网络用户使用的依旧是 IPV4 的 IP 地址，这也是限制公网 IP 个数的最大原因。 IPV4： IPV4 由 32 位二进制数组成，一共有 2^32 个不同的 IPV4 地址 IPV6：IPV6 由 128 位二进制数组成，理论上共有 2^128 个不同的 IPV6 地址 由此可见， IPV4 地址的个数并不足以满足当前全世界网络用户的人手一个 IP 地址的需求，那么当前的网络为什么可以让这么多用户同时在网络上冲浪呢？ 网络地址转化技术的核心作用在于实现对公网 IP 地址的复用，即所有的内网主机共用同一个 IP 地址，NAT 的实现方式共有三种： 静态转换：将内网 IP 直接转换为公网 IP 地址，形成一一对应的方式 动态转换：将内网 IP 地址转换为公网 IP 地址，与静态转换不同的是动态转换会在 IP 池中选择空闲 IP 地址进行转换，即每次同一个内网 IP 对应的公网 IP 会发生改变 端口多路复用(PAT 技术)：将内网 IP 与公网 IP 的某一端口进行映射，通过公网 IP 的某一端口访问公网 可以看出以上三种形式中 端口多路复用(PAT)技术可以最大程度上缓解 IPV4 地址紧张的现状，也是最为广泛使用的实现方式，三种 NAT 实现方式共同点在于：对于内网用户来说自己对应的公网 IP 是不可知的，就好像我们可以知道自己的门牌号但无法知道自己所在的小区，因此无法准确告诉别人我们的具体地址。 内网穿透在已知了当前内外网工作方式后，我们再来看一看作为程序员常用的技术手段 内网穿透 在此之前或许很多人都曾使用过如 花生壳、ngrok、frp 等方式在没有服务器的情况下将一些服务部署到网络上让别人使用 那么内网穿透的原理究竟是怎么样的呢？ 目前市面上主流的内网穿透工具实现的原理如下： 可见，内网穿透的核心原理在于将外网 IP 地址与内网 IP 地址建立联系，市面上常用的如花生壳工具其核心原理就是依靠一台具有公网 IP 的服务器作为请求的中转站以此来达到从公网访问内网主机的目的。 当我们启动花生壳的服务时，花生壳会将本地配置好的端口和服务器上的端口进行映射，告知服务器请求转发的路径，花生壳的公网服务器则会监听相应端口的请求，当用户访问花生壳提供的 IP 地址时，花生壳的对应 IP 地址的公网主机将会根据访问的端口映射到相应的内网主机，并通过预先配置好的服务端口将请求转发，以达到访问内网主机相应服务的效果。 花生壳作为一款商业产品，对于配置端口等一系列工作进行了封装，使得用户可以更快捷的使用内网穿透，但我们在了解原理后完全可以通过一些开源的框架以及一台公网服务器实现对应的内网穿透功能，我们以 frp 为例。 1&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x8BBE;&amp;#x7F6E;(frps.ini)&amp;#xFF1A;&lt;br&gt;[common]&lt;br&gt;bind_port&amp;#xA0;=&amp;#xA0;7000&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x586B;&amp;#x5199;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x76D1;&amp;#x542C;&amp;#x7684;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;&lt;br&gt;vhost_http_port&amp;#xA0;=&amp;#xA0;8080&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x586B;&amp;#x5199;&amp;#x7528;&amp;#x6237;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;&lt;br&gt;&lt;br&gt;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x914D;&amp;#x7F6E;(frpc.ini)&amp;#xFF1A;&lt;br&gt;[common]&lt;br&gt;server_addr&amp;#xA0;=&amp;#xA0;x.x.x.x&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x586B;&amp;#x5199;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#xA0;IP&amp;#xA0;&amp;#x5730;&amp;#x5740;&lt;br&gt;server_port&amp;#xA0;=&amp;#xA0;7000&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x586B;&amp;#x5199;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x914D;&amp;#x7F6E;&amp;#x7684;bind_port&lt;br&gt;&lt;br&gt;[web]&lt;br&gt;&lt;span&gt;type&lt;/span&gt;&amp;#xA0;=&amp;#xA0;http&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x89C4;&amp;#x5B9A;&amp;#x8F6C;&amp;#x53D1;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x534F;&amp;#x8BAE;&amp;#x7C7B;&amp;#x578B;&lt;br&gt;local_port&amp;#xA0;=&amp;#xA0;80&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x89C4;&amp;#x5B9A;&amp;#x672C;&amp;#x5730;&amp;#x670D;&amp;#x52A1;&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x5730;&amp;#x5740;&lt;br&gt;custom_domains&amp;#xA0;=&amp;#xA0;www.example.com&amp;#xA0;&amp;#xA0;&amp;#xA0;//&amp;#x6B64;&amp;#x5904;&amp;#x53EF;&amp;#x4EE5;&amp;#x586B;&amp;#x5199;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x57DF;&amp;#x540D;&amp;#xFF08;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#xA0;IP&amp;#xA0;&amp;#x5730;&amp;#x5740;&amp;#x4E0B;&amp;#x914D;&amp;#x7F6E;&amp;#x57DF;&amp;#x540D;&amp;#x89E3;&amp;#x6790;&amp;#xFF09; 当我们配置完上述的文件后，用户的访问请求将会经过如下的步骤： 用户的请求将会经过域名解析，公网端口的转发以及内网主机的监听三个步骤成功将请求发送到对应的内网服务，当然 frp 相较于花生壳提供了更多的自定义配置项，此处不做详细讲解，有兴趣的读者可以访问：frp 中文文档(https://gofrp.org/docs/examples/) 当我们使用 frp 去配置我们自己的内网穿透服务时，我们可以使用一台服务器为大量的内网主机提供公网访问的功能，以此来实现公网 IP 的复用，其原理与上文提到的 PAT 端口多路复用技术相类似，当我们临时需要使用服务器时，只需要向拥有公网服务器的朋友申请两个闲置端口即可。 frp 核心代码解析本文以 http 请求为例解析当一个公网请求发送到 frp 服务器后究竟会经过哪些步骤 1&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&amp;#xA0;&lt;span&gt;runServer&lt;/span&gt;&lt;span&gt;(cfg&amp;#xA0;config.ServerCommonConf)&lt;/span&gt;&amp;#xA0;&lt;span&gt;(err&amp;#xA0;error)&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;log.InitLog(cfg.LogWay,&amp;#xA0;cfg.LogFile,&amp;#xA0;cfg.LogLevel,&amp;#xA0;cfg.LogMaxDays,&amp;#xA0;cfg.DisableLogColor)&lt;br&gt;&lt;br&gt;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;cfgFile&amp;#xA0;!=&amp;#xA0;&lt;span&gt;&quot;&quot;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;log.Info(&lt;span&gt;&quot;frps&amp;#xA0;uses&amp;#xA0;config&amp;#xA0;file:&amp;#xA0;%s&quot;&lt;/span&gt;,&amp;#xA0;cfgFile)&lt;br&gt;&amp;#xA0;&#125;&amp;#xA0;&lt;span&gt;else&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;log.Info(&lt;span&gt;&quot;frps&amp;#xA0;uses&amp;#xA0;command&amp;#xA0;line&amp;#xA0;arguments&amp;#xA0;for&amp;#xA0;config&quot;&lt;/span&gt;)&lt;br&gt;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;1&lt;/span&gt;&lt;br&gt;&amp;#xA0;svr,&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;server.NewService(cfg)&lt;br&gt;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&amp;#xA0;err&lt;br&gt;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;log.Info(&lt;span&gt;&quot;frps&amp;#xA0;started&amp;#xA0;successfully&quot;&lt;/span&gt;)&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;2&lt;/span&gt;&lt;br&gt;&amp;#xA0;svr.Run()&lt;br&gt;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&#125; 在 frp/cmd/frps/root.go中 核心代码 1: server.NewService() 方法对我们在 frps 中的配置进行解析，初始化 frp 服务端 核心代码 2: serever.Run() 方法启动 frp 服务 1&lt;span&gt;for&lt;/span&gt;&#123;&amp;#xA0;&amp;#xA0;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;3&lt;/span&gt;&lt;br&gt;conn,&amp;#xA0;session,&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;svr.login()&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Warn(&lt;span&gt;&quot;login&amp;#xA0;to&amp;#xA0;server&amp;#xA0;failed:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;if&amp;#xA0;login_fail_exit&amp;#xA0;is&amp;#xA0;true,&amp;#xA0;just&amp;#xA0;exit&amp;#xA0;this&amp;#xA0;program&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;otherwise&amp;#xA0;sleep&amp;#xA0;a&amp;#xA0;while&amp;#xA0;and&amp;#xA0;try&amp;#xA0;again&amp;#xA0;to&amp;#xA0;connect&amp;#xA0;to&amp;#xA0;server&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;svr.cfg.LoginFailExit&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&amp;#xA0;err&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;util.RandomSleep(&lt;span&gt;10&lt;/span&gt;*time.Second,&amp;#xA0;&lt;span&gt;0.9&lt;/span&gt;,&amp;#xA0;&lt;span&gt;1.1&lt;/span&gt;)&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&amp;#xA0;&lt;span&gt;else&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;login&amp;#xA0;success&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;4&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;ctl&amp;#xA0;:=&amp;#xA0;NewControl(svr.ctx,&amp;#xA0;svr.runID,&amp;#xA0;conn,&amp;#xA0;session,&amp;#xA0;svr.cfg,&amp;#xA0;svr.pxyCfgs,&amp;#xA0;svr.visitorCfgs,&amp;#xA0;svr.serverUDPPort,&amp;#xA0;svr.authSetter)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;ctl.Run()&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;svr.ctlMu.Lock()&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;svr.ctl&amp;#xA0;=&amp;#xA0;ctl&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;svr.ctlMu.Unlock()&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;break&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&#125; 在 frp/cmd/client/service.go中 核心代码 3: for 循环不断去发起和服务端的连接，失败后会再次发起 核心代码 4: 连接成功后，客户端会使用连接的信息调用 NewControl() frps 发起连接 1&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&amp;#xA0;&lt;span&gt;(pxy&amp;#xA0;*BaseProxy)&lt;/span&gt;&amp;#xA0;&lt;span&gt;GetWorkConnFromPool&lt;/span&gt;&lt;span&gt;(src,&amp;#xA0;dst&amp;#xA0;net.Addr)&lt;/span&gt;&amp;#xA0;&lt;span&gt;(workConn&amp;#xA0;net.Conn,&amp;#xA0;err&amp;#xA0;error)&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;xl&amp;#xA0;:=&amp;#xA0;xlog.FromContextSafe(pxy.ctx)&lt;br&gt;&amp;#xA0;&lt;span&gt;//&amp;#xA0;try&amp;#xA0;all&amp;#xA0;connections&amp;#xA0;from&amp;#xA0;the&amp;#xA0;pool&lt;/span&gt;&lt;br&gt;&amp;#xA0;&lt;span&gt;for&lt;/span&gt;&amp;#xA0;i&amp;#xA0;:=&amp;#xA0;&lt;span&gt;0&lt;/span&gt;;&amp;#xA0;i&amp;#xA0;&lt; pxy.poolcount+&lt;span&gt;1;&amp;#xA0;i++&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;5&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;workConn,&amp;#xA0;err&amp;#xA0;=&amp;#xA0;pxy.getWorkConnFn();&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Warn(&lt;span&gt;&quot;failed&amp;#xA0;to&amp;#xA0;get&amp;#xA0;work&amp;#xA0;connection:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;xl.Debug(&lt;span&gt;&quot;get&amp;#xA0;a&amp;#xA0;new&amp;#xA0;work&amp;#xA0;connection:&amp;#xA0;[%s]&quot;&lt;/span&gt;,&amp;#xA0;workConn.RemoteAddr().String())&lt;br&gt;&amp;#xA0;&amp;#xA0;xl.Spawn().AppendPrefix(pxy.GetName())&lt;br&gt;&amp;#xA0;&amp;#xA0;workConn&amp;#xA0;=&amp;#xA0;frpNet.NewContextConn(pxy.ctx,&amp;#xA0;workConn)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;......&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;6&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;msg.WriteMsg(workConn,&amp;#xA0;&amp;msg.StartWorkConn&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;ProxyName:&amp;#xA0;pxy.GetName(),&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;SrcAddr:&amp;#xA0;&amp;#xA0;&amp;#xA0;srcAddr,&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;SrcPort:&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;uint16&lt;/span&gt;(srcPort),&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;DstAddr:&amp;#xA0;&amp;#xA0;&amp;#xA0;dstAddr,&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;DstPort:&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;uint16&lt;/span&gt;(dstPort),&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;Error:&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;&quot;&quot;&lt;/span&gt;,&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;)&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&#125;&lt;br&gt;&lt;/ pxy.poolcount+&lt;span&gt; 在 frp/server/proxy.go中 核心代码 5: frps 从多个连接中通过依次遍历的方式来获取第一个成功获取到的连接 核心代码 6: frps 通过获取到的连接向 frpc 发出 &amp;msg.StartWorkConn 的消息，告诉 frpc 建立连接的相应信息 frpc 响应连接 1&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&amp;#xA0;&lt;span&gt;(pxy&amp;#xA0;*TCPProxy)&lt;/span&gt;&amp;#xA0;&lt;span&gt;InWorkConn&lt;/span&gt;&lt;span&gt;(conn&amp;#xA0;net.Conn,&amp;#xA0;m&amp;#xA0;*msg.StartWorkConn)&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;7&lt;/span&gt;&lt;br&gt;&amp;#xA0;HandleTCPWorkConnection(pxy.ctx,&amp;#xA0;&amp;pxy.cfg.LocalSvrConf,&amp;#xA0;pxy.proxyPlugin,&amp;#xA0;pxy.cfg.GetBaseInfo(),&amp;#xA0;pxy.limiter,&lt;br&gt;&amp;#xA0;&amp;#xA0;conn,&amp;#xA0;[]&lt;span&gt;byte&lt;/span&gt;(pxy.clientCfg.Token),&amp;#xA0;m)&lt;br&gt;&#125; 在 frp/client/proxy/proxy.go中 核心代码 7: frpc 接收到 frps 的信息后发起 TCP 连接 frps 发送消息 1&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&amp;#xA0;&lt;span&gt;(ctl&amp;#xA0;*Control)&lt;/span&gt;&amp;#xA0;&lt;span&gt;writer&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;xl&amp;#xA0;:=&amp;#xA0;ctl.xl&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;&lt;span&gt;recover&lt;/span&gt;();&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Error(&lt;span&gt;&quot;panic&amp;#xA0;error:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Error(&lt;span&gt;string&lt;/span&gt;(debug.Stack()))&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&#125;()&lt;br&gt;&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;ctl.allShutdown.Start()&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;ctl.writerShutdown.Done()&lt;br&gt;&lt;br&gt;&amp;#xA0;encWriter,&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;crypto.NewWriter(ctl.conn,&amp;#xA0;[]&lt;span&gt;byte&lt;/span&gt;(ctl.serverCfg.Token))&lt;br&gt;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;xl.Error(&lt;span&gt;&quot;crypto&amp;#xA0;new&amp;#xA0;writer&amp;#xA0;error:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;ctl.allShutdown.Start()&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&lt;span&gt;for&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;m,&amp;#xA0;ok&amp;#xA0;:=&amp;#xA0;&lt;-ctl.sendch&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;!ok&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Info(&lt;span&gt;&quot;control&amp;#xA0;writer&amp;#xA0;is&amp;#xA0;closing&quot;&lt;/span&gt;)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;8&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;msg.WriteMsg(encWriter,&amp;#xA0;m);&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Warn(&lt;span&gt;&quot;write&amp;#xA0;message&amp;#xA0;to&amp;#xA0;control&amp;#xA0;connection&amp;#xA0;error:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&#125;&lt;br&gt;&#125;&lt;br&gt;&lt;/-ctl.sendch 在 frp/server/control.go中 核心代码 8: frps 发送信息到 crypto.NewWriter() 创建的 writer 中 frpc 接收和响应 1&lt;span&gt;//&amp;#xA0;!important&amp;#xA0;&amp;#x6838;&amp;#x5FC3;&amp;#x4EE3;&amp;#x7801;9&lt;/span&gt;&lt;br&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&amp;#xA0;&lt;span&gt;(ctl&amp;#xA0;*Control)&lt;/span&gt;&amp;#xA0;&lt;span&gt;reader&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;xl&amp;#xA0;:=&amp;#xA0;ctl.xl&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;&lt;span&gt;recover&lt;/span&gt;();&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Error(&lt;span&gt;&quot;panic&amp;#xA0;error:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Error(&lt;span&gt;string&lt;/span&gt;(debug.Stack()))&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&#125;()&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;ctl.readerShutdown.Done()&lt;br&gt;&amp;#xA0;&lt;span&gt;defer&lt;/span&gt;&amp;#xA0;&lt;span&gt;close&lt;/span&gt;(ctl.closedCh)&lt;br&gt;&lt;br&gt;&amp;#xA0;encReader&amp;#xA0;:=&amp;#xA0;crypto.NewReader(ctl.conn,&amp;#xA0;[]&lt;span&gt;byte&lt;/span&gt;(ctl.clientCfg.Token))&lt;br&gt;&amp;#xA0;&lt;span&gt;for&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;m,&amp;#xA0;err&amp;#xA0;:=&amp;#xA0;msg.ReadMsg(encReader)&lt;br&gt;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;!=&amp;#xA0;&lt;span&gt;nil&lt;/span&gt;&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;if&lt;/span&gt;&amp;#xA0;err&amp;#xA0;==&amp;#xA0;io.EOF&amp;#xA0;&#123;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Debug(&lt;span&gt;&quot;read&amp;#xA0;from&amp;#xA0;control&amp;#xA0;connection&amp;#xA0;EOF&quot;&lt;/span&gt;)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;xl.Warn(&lt;span&gt;&quot;read&amp;#xA0;error:&amp;#xA0;%v&quot;&lt;/span&gt;,&amp;#xA0;err)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;ctl.conn.Close()&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span&gt;return&lt;/span&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&#125;&lt;br&gt;&amp;#xA0;&amp;#xA0;ctl.readCh&amp;#xA0;&lt;- m&lt;br&gt;&amp;#xA0;&#125;&lt;br&gt;&#125;&lt;br&gt;&lt;/- m 核心代码 9: frpc 读取 frps 转发的信息 到这里，我们的 frps 已经成功将公网中接收到的请求转发到 frpc 相应的端口了，这就是一个最简单的请求通过 frp 进行代理转发的流程。 本文所介绍的内网穿透技术相关的实现方式其实在我们的日常开发生活中有更多的使用场景，当我们深入了解了当前 IP 地址以及内外网的实现方式后，我们不难发现，当我们将内网穿透的图片稍加修改后就成为了我们常用的另一种功能的实现方式(VPN 实现原理)： 参考文献 frp 源码地址frp 源码阅读与分析(二)：TCP 内网穿透的实现","categories":[],"tags":[]},{"title":"跨境电商独立站有哪些？是入驻平台好还是独立站好？","slug":"1673329547503","date":"2023-07-06T02:40:17.982Z","updated":"2023-01-03T05:59:31.107Z","comments":true,"path":"2023/07/06/1673329547503/","link":"","permalink":"http://www.yakjs.com/2023/07/06/1673329547503/","excerpt":"","text":"跨境电商圈，除了跟着大流量平台玩，独立站也是一个重要方向如今，独立站圈的巨头们，同步建设网站及 APP，页面做得高端大气，SEO 和社交引流也玩得很溜，那么跨境电商独立站有哪些呢? 从品类来看，做服装、时尚、电子的垂直平台占多数，一方面这些类目属于高频商品，电子类产品毛利相对低但属于标品，而且在珠三角供应便利、产品迭代快，服装属于高毛利非标品类，整个东南沿海都有大量供应商，供应链管理相对容易。 很多独立站在全球市场都崭露头角，以中东为例，购物类 APP 在 Googleplay 上的下载量排行前十名就有多个来自中国，包括 JollyChic、Zaful、SheIn、RoseGal、Romwe，那么跨境电商是做独立站好还是入平台好呢? 1、入门门槛平台轻松入门：Amazon，eBay，速卖通，Wish 等成熟的电商平台自身都有一套完整的平台运营模式。卖家只需要按照平台要求开个店铺，上传商品，立马可以开始，不能更适合前期运营紧张的小团队。 独立站入门比较难：建站涉及到技术方面的东西比较多，购买域名，空间，页面设计，还需要集成支付，打通物流，加上后期的网站运营维护等等，都需要比较专业的技术知识。团队需要有懂技术的人做相关支撑。 2、政策在平台上开店容易，但对应的，就是要遵守平台一系列合理不合理的要求。出现丝毫违规，平台分分钟给你关店封号。Amazon 频繁封号相比各位也是早有耳闻，听着也是让人瑟瑟发抖的。 自建的电商独立站一旦打通初始环节，则摆脱了平台政策的限制。卖家可以完全打造属于自己的个性化站点。 3、成本平台店铺初始成本较低。平台开店无需团队自行维护网络，平台自身集成支付、物流等功能，对初始团队来说很大程度上节约了时间和精力。 独立站在还没开始挣钱的时候就要花钱建站，并且因为没有平台的稳定流量支持，正式运营后必须进行网站推广。此外，网站运营、维护、客服，售后都需要人力支持和成本花销。 4、出单时间平台店铺出单较快。基于平台自身的大流量，即使新开店铺，只要投入精力将产品内容做好，平台访客自然会来浏览并且下单。 独立站因为是个全新平台，没有客户知道，因此必须进行大量推广，进行口碑累积，因此出单时间较长，且早期需要承担较大的资金压力。 5、客户交易信誉平台店铺初始信誉好。平台本身的长期优质运营和平台上的买家保护政策在一定程度上能够获得买家较好的信赖，而独立站卖家往往前期要花很大功夫去与买家建立这种交易信用。 6、流量和客户资源平台店铺依靠平台本身的大流量，相比独立站能更为轻松的获取客户。但平台的客户始终只属于平台。不论店铺多大，销量多好，客户邮箱等一手资源都无法真正掌握在店铺卖家手中。反观独立站，客户资源都是自己的，卖家可以将这些客户数据作为分析和推广资源。 7、竞争程度平台上店铺众多，卖家除了需要保证提供优质的商品，平台价格战也是不可避免的。毕竟用户在平台上浏览，可以在你家买，也可以在别家买，更可以货比三家的买。一旦店铺的商品失去竞争力，客户就很容易流失。而用户一旦来到了独立站，就没有那么多空间去比价，一旦进行复购，更是对独立站已经认可。 所以如果资金允许的话，最好还是平台和独立站相互结合，毕竟多一个渠道就多了一个展示的机会，自然而然流量和订单就多了，不过很多资金和人力不足的公司和个人，那么就要慎重考虑，两者都是各有长处，选择一个适合自己的运营模式最重要。","categories":[],"tags":[],"author":null},{"title":"四大跨境电商平台对比，新手入行该选哪个平台？","slug":"1673329578987","date":"2023-07-06T02:40:17.982Z","updated":"2023-01-10T05:47:34.725Z","comments":true,"path":"2023/07/06/1673329578987/","link":"","permalink":"http://www.yakjs.com/2023/07/06/1673329578987/","excerpt":"","text":"随着跨境电商行业的发展，以及越来越多的跨境电商平台来中国招商卖家，中国进入跨境电商行业的人越来越多，那么对于刚刚进入的新手卖家而言该怎么选择跨境电商平台呢？ 一、速卖通速卖通，于 2010 年 4 月上线。市场面向俄罗斯，巴西，以色列等第三世界国家。平台前期拥有可观的利润，随着阿里巴巴上市，卖家需要 花费大量资金进行站外引流，使得门槛越来越高，新规出台更是让广大卖家苦不堪言。 阿里旗下最不缺的就是买家资源， 平台流量大部分倾斜给了 金牌银牌卖家， 同时还要收取保证金、佣金、年费、手续费、运费等各项费用。 平台 在价格上竞争激烈 ，有时候价格会压的很低，才能有相应优势。 二、EbayeBay，1995 年创立于美国，市场主要是美国和欧洲。开店的门槛低，但需要的东西和手续比较多； 平台规则偏向买家，如果遇到投诉是很麻烦的事，所以产品质量一定要过关。免费开店，但上架需要收费，前期产品不能超过 10 个，审核周期较长，出单周期长，需要积累信誉。 eBay 成功的关键是选品，操作简单，投入小，适合有一定外贸资源的人做。因为平台资历较久，所以很多低货值产品被大卖把持。如今不少买家都在用海外仓做大件产品，但大件产品成本高，不适合新手。 三、wishWish，2011 年成立于美国硅谷，2013 年正式进军外贸电商领域。wish 是新兴的基于 App 的跨境电商平台，主要靠价廉物美吸引客户，在美国有非常高的人气，90%的货都来自中国。 对中小卖家来说，Wish 的成功让大家明白移动互联网的真正潜力，Wish 更偏向于客户，所以卖家在退货纠纷中较吃亏，且商品审核期较长，平台佣金较高，物流解决方面也不够成熟。 Wish 一直致力于让卖家操作简单，所以目前平台竞争程度比前两年更激烈。如果想要赚钱，只有精品店铺一条路可走，但精品店铺的投入需要相当长的周期，短期内不会有太好的效果。如果认为自己有能力的话可以尝试运营，毕竟任何门槛都会有成功之人。 四、亚马逊亚马逊，作为近几年的热门平台，因为流量大、客单价高、注册没有押金，商品审核快等优势，受到卖家的青睐。 亚马逊强大的物流体系 FBA，帮助客户打理发货，管理后期的仓储、配送、物流包括可能出现的退货问题；全球 149 个运营中心，能快速将商品配送至全球 180 多个国家和地区的消费者手中。 亚马逊的成本低，利润高，货源充足，支持全球开店。全球目前 14 个站点，其中 11 个已为中国卖家开放。 除了这几个主流平台，还有很多跨境平台，在这里就不一一说明了，附上一张图供大家了解： 为什么都选亚马逊？因为亚马逊客户群庞大，客户对价格并不敏感，所以产品利润率有所保证，平台对于上架新品会扶持一定的流量，前期只要大量铺货就可以带来订单。","categories":[],"tags":[],"author":null},{"title":"亚马逊平台的特点和优势","slug":"1676008129151","date":"2023-07-06T02:40:17.982Z","updated":"2023-02-10T05:50:06.634Z","comments":true,"path":"2023/07/06/1676008129151/","link":"","permalink":"http://www.yakjs.com/2023/07/06/1676008129151/","excerpt":"","text":"亚马逊平台发展势头迅猛，这得益于它成功的运营模式，那么亚马逊平台的特点和优势究竟有哪些？能够吸引无数国内外个人卖家和企业纷纷入驻这个网上平台，并且能够获得利润。 首先我们来看看亚马逊平台的运营特点：它之所以做的这么成功是因为它的受众群体非常广泛，是全球范围内的消费者群体，这就奠定了消费基数；在价格上亚马逊平台价格优惠，对入驻的卖家提供很多的政策支持，鼓励优秀卖家入驻，平台的月租金相对较低，卖家进入平台的难度相对较小；但是亚马逊的准入门槛高，对于卖家的管理制度比较严格，这也是为了保护消费者的利益，相对的就会拥有一大批粉丝，用户黏性高，这些一定程度上促使亚马逊平台的成功和知名度。 亚马逊平台的优势体现在几个方面:第一是消费群体质量高，面对的市场基本是发达国家。亚马逊平台全面开放北美，日本，欧洲等发达国家站点，遍布全球的跨境电子商务运营中心给卖家提供了便利条件，也给大批的中国卖家提供了跨境电商流量优势和战略支持。 第二就是亚马逊拥有自有的FBA仓储服务。亚马逊实行销售配送一体化，有效的节省了发货时间，为客户提供高效并且有保障的物流服务。大大降低了卖家的人工成本，从而提高了产品的销量和利润。 还有重要的一点就是亚马逊帮助卖家统计数据，亚马逊擅长大数据营销，卖家可以利用用户数据来调整自己的店铺结构，优化升级，使卖家能够对顾客实行精准的个性化定制营销。使得购物者能在购物过程中得到独特的购物体验。 亚马逊同时对优质的产品和店铺会提供扶持政策，如果产品合适，亚马逊会配合合理的运营推广，更好的提高产品的知名度，吸引大批潜在客户。 综上，亚马逊平台的特点和优势在卖家上道之后能享受到各种福利。这也使得亚马逊做的越来越好，二者互惠共赢。","categories":[],"tags":[],"author":null},{"title":"亚马逊账号二审","slug":"1685070941078-亚马逊账号二审","date":"2023-05-25T16:00:00.000Z","updated":"2023-05-26T03:18:44.191Z","comments":true,"path":"2023/05/26/1685070941078-亚马逊账号二审/","link":"","permalink":"http://www.yakjs.com/2023/05/26/1685070941078-%E4%BA%9A%E9%A9%AC%E9%80%8A%E8%B4%A6%E5%8F%B7%E4%BA%8C%E5%AE%A1/","excerpt":"","text":"亚马逊店铺二审真的是让人非常头疼的一个问题，许多新入驻的卖家都很担心遇到二审这种情况，其实，只要掌握正确的方法，二审也是没有那么可怕的，据我们几个学员反馈，近期注册账号的好多都通过了。 卖家应该理性看待二审，并且尽可能按照最为稳妥和全面的方式准备和提交资料，下面汇总了近期关于账号注册及二审的问题，希望给大家一个方向参考。 一、联系招商经理及注册流程： 1） 亚马逊官方招商经理会提供注册二维码或者注册信息登记表给卖家，用于录入系统。 2） 登记信息后的 3-7 个工作日（可能因注册站点的不同时效性不同）后，会有运营经理以 @amazon.com 邮箱后缀给你发一封注册邮件，注册链接 14 日失效，要实时查阅邮箱包括垃圾邮箱找到注册邮件。 3） 根据注册邮件的提示注意事项和内容进行注册，资料齐全的话，一般 20 分钟内就能注册完成，注册过程不可逆，也就是不能返回上一步去重新填写更改信息，所以每一步都小心再小心！各站点注册指导资料可联系我的微信获取。 4） 注册完成后，一般 7 个工作日内会有审核结果，如果你通过了并且收到邮件通知，并且你得绑定信用卡进行了首月月租扣费，恭喜你，说明你已经通过一审。 5） 如果账号在刚过一审 24 小时内没有触发二审，那么账户相对就是比较安全的。可以尽快开始上线 listing、发 FBA（或自发货），正常上线销售。 提醒：若有问题咨询，标准提问方式：注册邮箱+注册站点+问题描述（若有和亚马逊的邮件往来，截图关键邮件） 二、关于亚马逊二审 二审在内部全称是 BadActor Prevention(BAP)，所以它是在一审和欧洲 KYC 基础上，针对一些关联存疑、资料存疑、合规性存疑的账号，进行进一步审核验证的一轮审核。 二审的审核由对应站点的当地团队进行，所以已经脱离中国团队审核范围。 提醒：二审不是 100%触发，是概率事件。没有遇到二审的卖家请不要违规操作以免触发，已经触发二审的卖家积极准备资料过审或者进一步申诉。 目前大概率会触发二审的一些情况，中国卖家用美国或他国 IP/绑定虚拟信用卡/使用 VPS 等虚拟云 IP 进行注册/下账号就马上改收款及信用卡信息。经过一些卖家案例反馈，触发二审多在新账号一审通过的 24 小时内马上触发，若没有触发，可能是因为你的账号相应的关联和违规风险分较低，所以相对比较安全。 三、遇到二审的标志 店铺销售权限被暂时移除，你可以登录进去你的账号，但是显示无法正常可售。 选择激活账户或者申诉的时候，看到以下界面，此为二审新版提交资料页面，见到这个申诉页面即一定是遇到二审，并且需要谨慎提交资料了： 收到二审标志性邮件，有是否有以下关键词： 邮件底部会有申诉的按钮，点击也同样是进入二审提交申诉页面： 四、关于二审的注意事项 再次提供你的营业执照（真实有效存续）要求上传是采取复印件+拍照件的方式，复印要注意，不能用 300ppi 的分辨率，要求用 600 ppi 的分辨率。把复印和拍照的 2 张照片合成到一份 pdf 文档上传。 营业执照的红章一定要清楚，如果不清楚会界定为作假，所以副本章如果不清楚，请再上传正本，或者电子版的营业执照。 再次提供法人身份证。 重点：公共事业单位账单（真实有效可查）。用大白话讲就是法人或者公司名下的水电煤网账单。 · 距离你提交日，90 天内的账单，日期越新鲜越能证明你的地址有效。 · 公共事业单位指什么？水务局、供电局、天然气、国家电网、电信，这些都是，需要这些单位出具的账单+发票，欠费通知单也有通过的案例。这就是为什么物业账单不行，因为没有公信力。 · 彩色的，盖红色事业单位公章。这两个条件一定要同时满足。你的账单最好是有彩色水印、特定纸张的，这样不容易造假。黑白+红章几乎不过，太容易造假。 · 户名：法人本人或者注册公司名下的。其他人的，要证明与法人或者是公司关系。 · 地址：一定要匹配后台地址，你在注册时候就会填写两个地址，一个是营业执照上的注册地址，一个是办公地址。匹配其中一个即可。如果地址不匹配，一定不过。 再说一下，一堆卖家不知道怎么在 seller central 后台设定法人居住地址，你进“账号信息”，有个公司“经营地址”，勾选完以后，就是法人居住地址。所以，这个地址你可以写能够提供账单的地址即可。 同理，你在收到注册链接后，填写公司信息时，有个公司的“注册地址”，这个是营业执照上的地址。 你们在准备审核文档的时候，一定要确保“办公地址”勾选，按照办公地址出法人的地址账单。下面是操作说明。 什么账单不行？ 物业的不行，黑白的不行，超期的不行，地址、户名不匹配的不行。 发票的问题 很多卖家问我提供水电煤缴费发票行不，目前看来只提供发票的卖家过审率很低，所以我们建议以最完备的方式，水电煤网账单+水电煤发票的形式提供。 话费账单的问题 现在明确话费账单不受理，信用卡账单在二审不好用，单独提供已明确不接受，但是作为辅助账单提供可以。 分享部分卖家通过经验： 中国电信营业厅开具的宽带业务登记单或账单+缴费发票。 再次强调，过不过审有人为审查的随机性，不是人家过了，你提供一模一样的就一定能过，还要考虑地域，站点等不同因素，仅供参考。 五、二审资料提交方式： 1） 邮件直接点击申诉提交：&#115;&#101;&#x6c;&#108;&#101;&#114;&#45;&#112;&#x65;&#x72;&#102;&#x6f;&#x72;&#109;&#x61;&#x6e;&#x63;&#101;&#x40;&#97;&#x6d;&#97;&#x7a;&#x6f;&#110;&#46;&#99;&#x6f;&#109;/co.uk/co.jp 的二审邮件，点击底部申诉按钮，进入二审申诉页面提交资料。 2） 后台激活账户入口提交：登录后台，查看账户绩效，点击激活账户的按钮进入二审申诉页面提交资料。 提醒： 虽然现在有说法可以中文申诉，但还是建议卖家使用英文申诉，全球通用语言，避免冒险。 每个附件资料都要英文标注好文件名，方便审核人员对应查看。 假如一次申诉不成功被驳回要求提供补充资料，千万不要用同样的资料重复提交，强烈建议提交新的资料。因为同样的资料大概率会导致同样的审核结果，还白浪费申诉机会。 不要试探亚马逊的底线提交假资料。亚马逊官方用非常严厉的措辞说过：提交篡改或伪造的文件会被直接拒绝，没有申诉机会。 六、二审通过和不通过的标识 过审审邮件： 邮件标题通常是：Your selling on Amazon account has been reinstated. 不过审邮件: “我们将不再回复您的邮件”是二审死刑的标志，没有申诉机会，准备新的一套资料重新注册吧。 二审申诉常见错误： 错误 1: 在亚马逊有足够的时间审核您的申诉之前，重复提交文档。 我们会将回复发至卖家平台的业绩通知里。在您收到回复之前，请勿重复提交申诉或将您的申诉由其他渠道发送至亚马逊。因为我们有可能将您的多次重复申诉识别为垃圾邮件而延迟我们对您的回复。 错误 2: 提交的文件不完整、难以辨认、经过篡改、标记或截图。 请提交彩色扫描或您的文件的复印件。确保所有页面都存在。避免以任何方式更改你的文件，包括在文件上添加备注、水印或批注。 错误 3: 提交过期或无效类型的文件。 目前，我们只接受过去 90 天内的煤气或天然气、电力、自来水、或互联网服务的公用事业账单。不接受任何其他类型的账单或发票，如手机账单、原材料采购发票、产品发票、采购协议、电子邮件截图等。请注意，我们只支持 pdf、png、gif 格式的文件。 错误 4：一次性提交多个账单而其中有不符合要求账单。 请避免，把你的所有账单一次性全部提交。若有一份账单有问题，都将全盘驳回申诉。因此，选择最合规，最有把握的一份账单提交即可。 二审申诉机会： 二审一般只有 3 次申诉机会，第一次不过的时候，就和你的运营经理沟通（每个通过招商经理注册的卖家都有运营经理）给他看下诊断下你提供的资料是否有问题。再进行第二次申诉，不要自己同样的资料重复提交，浪费申诉机会。 七、关于近期欧洲站二审的问题 近期很多注册欧洲站的朋友留意了，可能一注册完就会收到暂停销售的信息，需要根据指引提供相关的信息，确保顺利进入亚马逊欧洲站的审核流程，下面是亚马逊招商经理提供的操作指引。","categories":[],"tags":[],"author":"Mr.APIS"},{"title":"亚马逊自发货卖家如何设置运费","slug":"1685086782476-亚马逊自发货卖家如何设置运费","date":"2023-05-25T16:00:00.000Z","updated":"2023-05-26T07:41:09.776Z","comments":true,"path":"2023/05/26/1685086782476-亚马逊自发货卖家如何设置运费/","link":"","permalink":"http://www.yakjs.com/2023/05/26/1685086782476-%E4%BA%9A%E9%A9%AC%E9%80%8A%E8%87%AA%E5%8F%91%E8%B4%A7%E5%8D%96%E5%AE%B6%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%BF%90%E8%B4%B9/","excerpt":"","text":"运费设置是在亚马逊平台上售卖商品的重要关键。店铺产品上架前卖家们首先要对整个店铺进行运费的设置，尤其对于新手卖家而言物流成本的控制更是关系到利润的重要事项。因此，今天给大家总结一些关于如何在亚马逊上设置运费，以及介绍在亚马逊上设置的不同收费方式。 一、自发货模式如何在亚马逊后台进行运费配送的设置亚马逊有 3 种标准运费模式，分别是： 1.按商品/重量运费模式。这种模式基于每件商品/重量的配送方式，即按每件商品收费，或者是按磅收费。 2.按订单金额运费模式。按订单金额的配送方式需要卖家创建订单价格分段，每个价格分段对应不同的运费设置。 3.如果卖家销售的是“图书、音乐、视频和 DVD”，那运费将由亚马逊设定。 二、卖家如何在后台设置配送运费？以亚马逊北美站为例为您详解 1.首先登录后台设置(Setting)→ 配送设置(Shipping Setting)。 2.点击“编辑”选择发货地址，你可以设置发货地点，如果你是从中国发货的，在“国家/地区”选择“中国，如果您不想显示地点或者从多个地点发货，请选择“无”。 3.选择运费设置方式分为两种：按订单金额和按商品/重量，你可以根据自己产品的情况选择一种运费设置。 （一）按订单金额运费模式1.选择标准配送地区和派送时效 标准配送地区：包括美国大陆街道、阿拉斯加和夏威夷街道、美国保护国等地区，卖家在进行地区勾选之前，可以先向自己选择的物流公司确认配送地区和配送收费标准。一般来说，中国卖家只要勾选“标准配送地区和服务级别”的前四项就可以了。 选择派送时效：分为“普通配送(17-28 工作日)”“快递配送(1-3 工作日)”“隔日达(2 个工作日)”“次日达(24 小时)”，中国卖家如果从国内发货，建议选择“普通配送(17-28 工作日)”。 2.“按订单金额”设置运费相对而言更简单，运费是以订单总金额(包含配送运费)来决定的。如果你选择分区间来收运费，则点击“添加更多区间”来设置，然后对每个分段进行运费设置。 3.设置好之后，点击“继续”按钮会跳到下一页,检查后没问题就点“确认”，设置成功后会跳回运费设置页面。 4.如果你需要对运费进行修改，可以点击“编辑”按钮。如果你需要更改配送方式，则点击“更改运费计算方法”。 （二）“按商品/重量”运费模式第一步：选择该运费模式，首先需选择标准配送地区和服务级别，这里的操作方法和“按订单金额”模式一样，选择标准配送地区和服务级别，点击“继续”。 第二步：“按商品/重量”运费模式，此模式的计费公式=单次配送金额+产品件数/产品重量金额。 按商品收费：也就是按每件商品来收运费。举个例子，如果客户购买 C 产品 1 件，C 每件商品收 2 美金，单次配送金额设为 5 美金，客户需要支付的运费为 5+2=7 美金。 按重量收费：也就是按商品的重量每磅(LBS)来收取运费。举个例子，如果客户购买的产品包裹总重为 2 磅，每磅收 1 美金，根据计费公式，客户需要支付的运费为 5+2*1=7 美金。 运费设置成功后查检一下，确认没问题后，点击“确认”，保存成功后会跳回运费设置页面。这样就完成了自发货模式下运费的设置。如果你选择的配送区域全部免运费，也就是包邮，那就把所有的区域运费都设置为 0 就好了。","categories":[],"tags":[],"author":"Mr.APIS"},{"title":"亚马逊全球开店入驻指南(招商经理&自注册教程)","slug":"1679360510689-亚马逊全球开店入驻指南","date":"2023-03-20T16:00:00.000Z","updated":"2023-03-21T01:09:51.243Z","comments":true,"path":"2023/03/21/1679360510689-亚马逊全球开店入驻指南/","link":"","permalink":"http://www.yakjs.com/2023/03/21/1679360510689-%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%85%A8%E7%90%83%E5%BC%80%E5%BA%97%E5%85%A5%E9%A9%BB%E6%8C%87%E5%8D%97/","excerpt":"","text":"亚马逊全球站点及卖家分布亚马逊在全球有 14 个站点:北美站 3 站(美国、加拿大、墨西哥)、欧洲 5 站(德国、法国、西班牙、意大利、英国站)、日本站、土耳其站、澳大利亚站、印度站、巴西站和中国站。大陆的卖家一般入驻的是北美站、欧洲站和日本站,卖家们在通过亚马逊招商经理注册时要先想要想要注册哪个站。 根据 Marketplace Pulse 的数据，截止到 2018 年 12 月 2 日 11 时 40 分, 过去一年整个亚马逊平台新增了 1,163,659 卖家，平均每天有 3,473 个新卖家加入，每小时 144 个，每分钟超过 2 个。 中国卖家在亚马逊各个站点上的占比几乎都超过 40%，尽管图中缺少美国站的数据, 但是包括了欧洲站 5 国，欧洲市场仅仅只是中国卖家的第二目标市场，想做亚马逊的卖家几乎都会挤破头进入美国站。对于亚马逊的中国卖家来说，美国站是首选的入驻站点,然后是欧洲站和日本站, 印度站、巴西站等新兴站点也是卖家们争相布局的市场。 通过以上所有信息显示出了如下几点： 1、亚马逊平台正在急速发展，涉及到的市场越来越广。 2、目前亚马逊市场主要主要市场仍然是美国市场，但是印度和欧洲是亚马逊未来着力发展的市场之一，同时一些具有特色的小众市场如墨西哥等也是亚马逊的扩张趋势。 3、中国卖家在跨境电商市场上占据半壁江山。 亚马逊全球开店对于很多才开始接触亚马逊的新手来说，注册账号是他们进入亚马逊的第一步，然而亚马逊的账号注册有两种方式:自注册(个人卖家)与通过招商经理注册“亚马逊全球开店”(公司卖家)，这两种方式有什么区别呢? “亚马逊全球开店”是亚马逊针对中国市场做的一个招商项目，是开店注册的一种方式。可以简单理解为中国公司级卖家在亚马逊平台开店。与之相对的，还有亚马逊自注册开店（个人卖家在亚马逊开店），在介绍全球开店相关内容之前，我们简单了解一下全球开店和自注册开店的不同及优劣。 ”亚马逊全球开店“优势: 1.账号安全性高:封店率&lt;9% (官方统计数据)。 2.有对应的招商经理扶持:指导和监管卖家账户运营，帮助卖家解决操作中的问题，账户有小问题会提前预警，可以申请线下秒杀活动，有需要升舱的卖家也可以通过招商经理去完成。 3.有官方的培训支持:包括后台操作培训(单独刊登，批量刊登，跟卖，订单处理，客服处理，后台设置，报告解读)如何提升销量，FBA 详解，最新政策，活动解读等。 “亚马逊全球开店”劣势: 1.非常难申请:“全球开店”计划意在筛选优质卖家入驻亚马逊平台，所以对卖家的资质审核比较严格，不是想入驻就可以入驻的。卖家自己申请“全球开店”通过率 5%不到,一旦卖家自己申请全球开店没有通过，那么用于申请全球开店的那个公司不能再次用于全球开店的申请。 周期非常长:“全球开店”账号的注册周期一般是在两个多月左右。全球开店账号的注册周期一般是在 7-15 个工作日左右。（7-15 个工作日是指通过我们的招商经理链接进行注册的平均周期，卖家自己申请的话至少都是在三个月以上），一般情况下，所有站点的注册中，美国站的会相对来说比较快。 监管非常严:经营全球开店账号，必须严格遵守亚马逊的平台规则，产品图片、标题格式等等都必须严格按照要求执行，否则会被警告。 招商经理通道注册“亚马逊全球开店”如果卖家选择“亚马逊全球开店”，那么就必须用公司的名义来注册，大陆或香港的公司都可以注册，需要注意的是“亚马逊全球开店”并不意味着您在亚马逊拥有一个包含全球所有站点的店铺，可以选择北美站、欧洲站、日本站中的任何一个站点开始开店。一般情况下, 建议通过招商经理通道注册“亚马逊全球开店”。 公司级卖家为什么要选择招商经理通道注册?招商经理在我们的全球开店项目中起到非常重要的作用，通过招商经理注册“全球开店”账户有什么好处呢？ 1.账号注册上线辅导及为期一个自然年的扶持:招商经理会评估卖家的资料，给符合条件的卖家发送全球开店注册链接，并会给予卖家上线注册指导，一般而言，注册账号所需时间为 5-10 分钟即可。对于注册完成的账号，招商经理会安排上线经理进行产品信息审核，上线经理会告知卖家亚马逊对于产品图片是否涉及侵权，标题描述以及关键字的要求优化的指导和建议，同时卖家朋友在此过程中遇到任何操作问题,均可向上线经理求助。 2.账户运营安全:对于亚马逊卖家而言，账号安全是最为看重的一点。亚马逊高度重视消费者的消费体验，致力于创造一个消费者安心消费的环境，从而对卖家进行严格的管理。不少卖家由于绩效表现不佳、侵权、消费者投诉描述不符或者假货投诉、或者账号关联等因素导致账号被封。账号被封，意味着前期培育的 ASIN，店铺累计的绩效付之东流，同时消费者任何的退款申请亚马逊将无条件支付，剩余金额 90 天后才会支付，所以对于卖家来讲，之前的精力，资金投入都会变成无用功。在这个点上，招商经理在卖家账户处于高危状态的时候会提醒卖家及时纠错或者撰写完整的改进计划、指导卖家发现问题并进行申诉。 3.申请促销活动:Best deal(Z 划算)和 Deal of the Day(镇店之宝)是亚马逊站内少有的促销资源，亚马逊每日都会推出促销活动，促销活动对于卖家而言:一方面可以提升短期内的销量,一方面是提升自己品牌的曝光。而对于全球开店的卖家，只要符合 FBA 库存数目，销售价格以及店铺绩效等要求，即可通过招商经理申请。 4.汽配类目开通/KYC 审核提前/视频添加等:对于像汽配类目的开通可以通过招商经理提交申请开通;同时如果有欧洲站的卖家想被提前 KYC 审核，从而放心发货过去的这类型的卖家需求，招商经理可以帮助提交申请提前 KYC;同时类似的还有对于一些还没有品牌备案但是有强烈添加视频需求的卖家，可以找招商经理提报，视频对于提升商品的购买转化率还是非常有帮助的！ 当然招商经理的能力不仅仅是这些, 如果您有新市场拓展计划，比如开通欧洲站、日本站等其他站点, 有了招商经理的协助一定事半功倍, 所以建议公司客户建议通过招商经理通道注册“亚马逊全球开店”！ 如何联系亚马逊招商经理开店?亚马逊招商经理一般通过在信息征集的形式先对您的公司信息进行初步登记, 然后初步筛选后然后会以邮件的形式为您发送注册链接,收到邮件后通过邮件的链接和提示一步步操作。 自注册亚马逊平台开店如果是个人卖家,可以选择自注册的方式，个人卖家自行登录亚马逊网站直接注册就好了，公司级卖家也可以选择自行注册亚马逊平台开店, 但是建议通过招商经理通道注册”亚马逊全球开店“。因为只要注册成功后就不能够对接对应的招商经理转化成亚马逊全球开店的账户，并且也不能享受亚马逊全球开店的优势。 自注册的优势:个人就可以注册，注册周期比较快。账号注册快，在你的资料都没有任何问题的情况下，两小时之内就可以把账号开通。 自注册的劣势:账号安全性低，封店率&gt;56% (官方统计数据)，即便是被 review 也不会有任何的预警和帮助 没有客户经理很难申报秒杀活动，除非这个自注册卖家店铺绩效非常的高，是个大卖家才会收到亚马逊的申请邀请，否则一般是无法参加的 无官方培训支持普通卖家账户 注册亚马逊北美站、欧洲站、日本站要准备哪些材料?电子邮箱地址:可以任意的电子邮箱，但是，需要确定的是，使用的邮箱为之前不曾在亚马逊平台注册使用过的邮箱。(建议使用 hotmail、Gmail、QQ 邮箱等，不建议网易邮箱)。 公司营业执照彩色扫描件或彩色照片:中国大陆境内、香港特区、台湾地区注册的有限公司;非个体工商户;香港公司请提供“公司注册证书”和“商业登记条例”扫描件;台湾公司请提供“有限公司设立登记表/股份有限公司设立登记表/有限公司变更登记表/股份有限公司变更登记表”;不接受澳门特区法人;需为三证合一的更新版营业执照 法人身份证彩色扫描件或彩色照片:需要和营业执照上法人保持一致;不接受黑白复印件。 双币信用卡(Visa/MasterCard 等):注册过程中需要用到信用卡，信用卡可以是法人的，也可以是其他人的，但信用卡必须是双币种的信用卡，就是我们经常使用的卡面上带有 VISA 或者 Mastercard 标识的信用卡。注册前，需要将信用卡开卡激活，同时，要确保卡内的可用额度要超过 40 美元才行。可使用中国境内商业银行签发的 VISA 双币信用卡(能扣美金即可);美国账户可以使用持卡人为他人的信用卡，建议使用法人信用卡;欧洲账户信用卡持卡人必须为公司法人/受益人或者由公司承债的商务信用卡。 海外银行收款帐号:即欧美当地银行储蓄卡账号,在新店铺注册流程中,有个添加收款账号的环节，所以，卖家需要在注册亚马逊账号之前,先注册收款账号。收款账号有点类似于支付宝，对于卖家来说，起的是从亚马逊平台放款到卖家提款到国内银行卡之间的中转作用。一般使用第三方收款工具:主流以及官方推荐是是下面几家 Payoneer 派安盈、World First 万里汇、Pingpong 等建议使用老牌支付 Payoneer 派安盈。 电话:固话或者手机均可,使用的电话号码为之前不曾在亚马逊平台注册使用过的电话号码。 关于公司营业执照、法人身份证明和地址证明 公司注册时间并没有要求，可以是刚刚注册下来的，也可以是已经注册并运营多年的，公司经营范围也没有明确要求，贸易类、电子类、科技类、商贸类公司都是 OK 的，公司营业执照所涵盖的经营范围也不会直接影响亚马逊的账号注册及后期的运营，但需要提醒的是，如果完全不相干的，比如用物流公司的营业执照来注册亚马逊账号，则有可能通不过。 法人身份证明自然是法人身份证了，身份证需要正反面拍照，并且把正反面合成在一张图片中，也有可能会被要求提交法人手持身份证的照片，地址证明是指水、电、煤气的对账单，需要是公共事业单位的，你的房东给你开的收据是不行的，小区物业管理处的收据也是不行的。","categories":[],"tags":[],"author":"Mr.APIS"},{"title":"【Amazon Newbie Store Opening】 Amazon Account Types Explained","slug":"1677722493865-Amazon-account-types","date":"2023-03-01T16:00:00.000Z","updated":"2023-03-02T02:28:16.819Z","comments":true,"path":"2023/03/02/1677722493865-Amazon-account-types/","link":"","permalink":"http://www.yakjs.com/2023/03/02/1677722493865-Amazon-account-types/","excerpt":"","text":"Before registering for an Amazon seller account, let’s first understand what are the Amazon account types? There are four main categories of Amazon seller accounts that are known to exist, which are Amazon Seller Central(3P) Amazon Vendor Central (VC) Amazon Vendor Express(VE) Amazon Business Seller(AB) Amazon Business Seller(AB) (can be interpreted as an upgraded version of Amazon Seller Central(3P)). Let’s start with a diagram comparing the three Amazon management platforms: Seller Central, Vendor Express, Vendor Central. Amazon Seller CentralThe most common type of seller today is the SC or AS, also known as the 3P Seller (Third-Party Seller), which is spread all over the world, so there are also the most problems here. First of all, for Chinese buyers Amazon Seller Central, there are two ways of entry: “Self-registration” and “Global Store”. Global Store &amp; Self-registration: Self-registration is the traditional direct registration of Amazon seller account through the Amazon registration page. The Global Store is an official Amazon shop opening method for Chinese sellers and was officially introduced to China in early 2012. Global Store only accepts companies (including mainland companies as well as Hong Kong, Macau and Taiwan companies) to set up shop, this way to open a shop first need to review the company and some other content. Note: Global shop is just a project name of Amazon, it does not mean that the opening of an account can be sold in various countries of Amazon, registered Amazon seller account whether through the global shop or since the registration method, are required to sub-site registration! Individual seller &amp; professional seller: In China, in addition to self-registration or “global shop” way to station, which is self-registered 3P seller distinguished as Individual (personal sales plan) and Professional (professional sales plan). The following picture shows an Amazon buyer’s account that has been registered through the Global Store, and it is obvious that the seller can switch between Professional and Individual. The Professional account can be registered either as an individual or as a business, just choose a different identity type when registering. Important differences between Professional and Individual: Individual sellers do not have the same batching capabilities as PRO sellers Individual sellers do not have order data reporting Individuals cannot create special product details such as promotions Individual does not have a gold shopping cart Individual accounts do not have a monthly fee, just a $0.99 fee for each product listed + a commission for each product sold Professional seller monthly fee $39.99 commission for one product sold (also known as deduction points), different percentage of deduction points for different products ($39.99 US monthly fee, £25 Europe monthly fee) Amazon Business Seller, or AB for shortAmazon Business is Amazon’s new one-stop shopping site for corporate and institutional buyers, launched in 2015. Through Amazon Business, business and institutional buyers have access to a huge selection of products, exclusive business-specific pricing, 2-day product delivery and an easy approval workflow to make business purchasing easier. Simply put, Amazon Seller Central is a B2C Amazon third-party seller account, while Amazon Business Seller is a B2B account that provides a one-stop shop for everything a business owner needs to buy, and the same company can apply for both. Amazon Vendor CentralThe VC system is relatively closed and is by invitation only, so if you are not invited by Amazon you cannot apply to join. However, there is no limit to the number of products you can upload to VC, and VC has full support for A+ pages. Amazon Vendor ExpressThe VE is a lite or junior version of the VC, with a self-application channel. If you apply for a VE, Amazon won’t buy your stuff straight away, they’ll ask you to send a few free samples first. Amazon calls this a test product, they will put it on the shelf first to see if it sells well, if it sells well then they will order it from you, if it doesn’t sell well then the samples may be wasted, but they will order it based on the value of your samples, for example for $20 you may have to provide 6 or 7, for $100 you may have to provide 2 free samples. Another thing is that the billing period for Sellers is 14 days, whereas the billing period for VCs and VEs is much longer, and I’m told that previously the Vendor had a 90-day billing period, but with VCs you can negotiate with Amazon. However, if you are a VE, you are not eligible to negotiate and it is currently a fixed period of 60 days. In fact, both VCs and VEs are part of Amazon Vendor, which is a B2B model of Amazon’s vendors. Compared to Seller, Vendor has the following advantages. There is no annual fee; Products will be displayed as Sold by Amazon; The product pages will be designed by Amazon (including A+ pages with images and text); If shipped by Amazon, Amazon pays all shipping and handling fees (completely eliminating FBA fees); If shipped by the seller, the seller can ship from the US warehouse to the end customer themselves (inventory is more controllable and FBA is no longer a mandatory option for optimization); Products are automatically listed as Amazon Prime (directly on Amazon’s membership level); Access to Amazon marketing tools (e.g. in-depth keyword viewing, etc.)","categories":[],"tags":[],"author":"Mr.APIS"},{"title":"Being Outside in Fresh Air & How Your Body Loves It","slug":"Being-Outside-in-Fresh-Air-and-How-Your-Body-Loves-It","date":"2016-11-20T13:55:38.000Z","updated":"2022-12-22T06:13:40.184Z","comments":true,"path":"2016/11/20/Being-Outside-in-Fresh-Air-and-How-Your-Body-Loves-It/","link":"","permalink":"http://www.yakjs.com/2016/11/20/Being-Outside-in-Fresh-Air-and-How-Your-Body-Loves-It/","excerpt":"Amor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","text":"Amor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni.","categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"},{"name":"markup","slug":"lifeStyle/markup","permalink":"http://www.yakjs.com/categories/lifeStyle/markup/"}],"tags":[{"name":"sticky","slug":"sticky","permalink":"http://www.yakjs.com/tags/sticky/"},{"name":"template","slug":"template","permalink":"http://www.yakjs.com/tags/template/"}]},{"title":"Stephen Hawking launches Centre for the Future of Intelligence","slug":"Stephen-Hawking","date":"2016-11-18T02:55:37.000Z","updated":"2023-02-22T02:27:15.976Z","comments":true,"path":"2016/11/18/Stephen-Hawking/","link":"","permalink":"http://www.yakjs.com/2016/11/18/Stephen-Hawking/","excerpt":"Alongside the benefits, AI will also bring dangers, like powerful autonomous weapons, or new ways for the few to oppress the many. Stephen Hawkingwww.cam.ac.uk Artificial intelligence has the power to eradicate poverty and disease or hasten the end of human civilisation as we know it – according to a speech delivered by Professor Stephen Hawking this evening. Alongside the benefits, AI will also bring dangers, like powerful autonomous weapons, or new ways for the few to oppress the many. “Success in creating AI could be the biggest event in the history of our civilisation,” said Professor Hawking. “But it could also be the last – unless we learn how to avoid the risks. Alongside the benefits, AI will also bring dangers like powerful autonomous weapons or new ways for the few to oppress the many. “We cannot predict what we might achieve when our own minds are amplified by AI. Perhaps with the tools of this new technological revolution, we will be able to undo some of the damage done to the natural world by the last one – industrialisation.” The Centre for the Future of Intelligence will initially focus on seven distinct projects in the first three-year phase of its work, reaching out to brilliant researchers and connecting them and their ideas to the challenges of making the best of AI. Among the initial research topics are: ‘Science, value and the future of intelligence’; ‘Policy and responsible innovation’; ‘Autonomous weapons – prospects for regulation’ and ‘Trust and transparency’.","text":"Alongside the benefits, AI will also bring dangers, like powerful autonomous weapons, or new ways for the few to oppress the many. Stephen Hawkingwww.cam.ac.uk Artificial intelligence has the power to eradicate poverty and disease or hasten the end of human civilisation as we know it – according to a speech delivered by Professor Stephen Hawking this evening. Alongside the benefits, AI will also bring dangers, like powerful autonomous weapons, or new ways for the few to oppress the many. “Success in creating AI could be the biggest event in the history of our civilisation,” said Professor Hawking. “But it could also be the last – unless we learn how to avoid the risks. Alongside the benefits, AI will also bring dangers like powerful autonomous weapons or new ways for the few to oppress the many. “We cannot predict what we might achieve when our own minds are amplified by AI. Perhaps with the tools of this new technological revolution, we will be able to undo some of the damage done to the natural world by the last one – industrialisation.” The Centre for the Future of Intelligence will initially focus on seven distinct projects in the first three-year phase of its work, reaching out to brilliant researchers and connecting them and their ideas to the challenges of making the best of AI. Among the initial research topics are: ‘Science, value and the future of intelligence’; ‘Policy and responsible innovation’; ‘Autonomous weapons – prospects for regulation’ and ‘Trust and transparency’. The Academic Director of the Centre, and Bertrand Russell Professor of Philosophy at Cambridge, Huw Price, said: “The creation of machine intelligence is likely to be a once-in-a-planet’s-lifetime event. It is a future we humans face together. Our aim is to build a broad community with the expertise and sense of common purpose to make this future the best it can be.” Many researchers now take seriously the possibility that intelligence equal to our own will be created in computers within this century. Freed of biological constraints, such as limited memory and slow biochemical processing speeds, machines may eventually become more intelligent than we are – with profound implications for us all. AI pioneer Professor Maggie Boden (University of Sussex) sits on the Centre’s advisory board and spoke at this evening’s launch. She said: “AI is hugely exciting. Its practical applications can help us to tackle important social problems, as well as easing many tasks in everyday life. And it has advanced the sciences of mind and life in fundamental ways. But it has limitations, which present grave dangers given uncritical use. CFI aims to pre-empt these dangers, by guiding AI development in human-friendly ways.” “Recent landmarks such as self-driving cars or a computer game winning at the game of Go, are signs of what’s to come,” added Professor Hawking. “The rise of powerful AI will either be the best or the worst thing ever to happen to humanity. We do not yet know which. The research done by this centre is crucial to the future of our civilisation and of our species.” Transcript of Professor Hawking’s speech at the launch of the Leverhulme Centre for the Future of Intelligence, October 19, 2016 “It is a great pleasure to be here today to open this new Centre. We spend a great deal of time studying history, which, let’s face it, is mostly the history of stupidity. So it is a welcome change that people are studying instead the future of intelligence. Intelligence is central to what it means to be human. Everything that our civilisation has achieved, is a product of human intelligence, from learning to master fire, to learning to grow food, to understanding the cosmos. I believe there is no deep difference between what can be achieved by a biological brain and what can be achieved by a computer. It therefore follows that computers can, in theory, emulate human intelligence — and exceed it. Artificial intelligence research is now progressing rapidly. Recent landmarks such as self-driving cars, or a computer winning at the game of Go, are signs of what is to come. Enormous levels of investment are pouring into this technology. The achievements we have seen so far will surely pale against what the coming decades will bring. The potential benefits of creating intelligence are huge. We cannot predict what we might achieve, when our own minds are amplified by AI. Perhaps with the tools of this new technological revolution, we will be able to undo some of the damage done to the natural world by the last one — industrialisation. And surely we will aim to finally eradicate disease and poverty. Every aspect of our lives will be transformed. In short, success in creating AI, could be the biggest event in the history of our civilisation. But it could also be the last, unless we learn how to avoid the risks. Alongside the benefits, AI will also bring dangers, like powerful autonomous weapons, or new ways for the few to oppress the many. It will bring great disruption to our economy. And in the future, AI could develop a will of its own — a will that is in conflict with ours. In short, the rise of powerful AI will be either the best, or the worst thing, ever to happen to humanity. We do not yet know which. That is why in 2014, I and a few others called for more research to be done in this area. I am very glad that someone was listening to me! The research done by this centre is crucial to the future of our civilisation and of our species. I wish you the best of luck!” 以下为霍金演讲全文的中文版：今天，非常荣幸来来这里参加新中心的开启仪式。 我们花了大把的时间研究历史，让我们来直面这部历史，这近乎是部愚昧的历史。所以，人们现在转而研究未来的智慧了，这种转变将备受欢迎。 对人类而言，智慧是存在的核心所在。一切文明，皆是智慧的产物。从学会用火，到学会耕种，到理解宇宙。 我相信，生物的大脑所获得的智慧，与计算机所能获得的智慧，并无本质区别。因此，理论上，计算机可以模拟人类智慧，并超越它。 现在人工智能的研究日新月异。最新的标志性成果，比如自动驾驶汽车、阿尔法狗战胜围棋世界高手，预示着即将到来新的时代。大小额投资纷纷倾注于这个领域。我们迄今为止所见到的成就，在新时代面前，即将黯然失色。 人工智能的带来的益处是巨大的。我们无法预测，当人类心智被人工智能扩展时，我们会取得哪些成就。也许，有了这个技术革命的新工具，我们能够有能力弥补一些由工业化对自然界造成的破坏。当然，我们希望能够最终消灭疾病和贫穷。我们生活的方方面面都会被变化。简而言之，人工智能的成功创造，可以说是人类文明史上最大的事件。 但是，它也可能是人类文明史的终结，除非我们学会如何避免它所带来的危害。人工智能在带来益处的同时，也带来危险，比如强大的自动武器，或少数人欺压多数人的新方法。它也可能给我们的经济带来巨大的破坏。将来，人工智能可能会发展出来它自己的意志——一个与人类相冲突的意志。 总之，人工智能的强力崛起，在人类历史上，可能是最好的，也可能是最糟糕的。而我们尚且不知道会是哪一个。这是为什么在2014年，我和其它几个人呼吁在这个领域进行更多研究。令我欣慰的是，有人听到了我的呼声！ 这个中心的研究，对我们人类文明的将来，对我们人类这个物种而言，都是极其关键的。祝大家好运！","categories":[{"name":"AI","slug":"AI","permalink":"http://www.yakjs.com/categories/AI/"}],"tags":[]},{"title":"Hillary Clinton Calls for Unity in Concession Speech","slug":"Hillary Clinton Calls for Unity in Concession Speech","date":"2016-11-18T01:55:37.000Z","updated":"2023-05-26T07:16:34.706Z","comments":true,"path":"2016/11/18/Hillary Clinton Calls for Unity in Concession Speech/","link":"","permalink":"http://www.yakjs.com/2016/11/18/Hillary%20Clinton%20Calls%20for%20Unity%20in%20Concession%20Speech/","excerpt":"Hillary Clinton delivered her concession speech this morning in New York City. In the speech, Clinton thanked Tim Kaine and Anne Holton, her family, and the Obamas for all their support on the campaign trail. She also thanked her staff, campaign volunteers, and everyone who has supported the campaign by voting or donating. Clinton asked that everyone not be discouraged by the results saying that she hopes Donald Trump will be “a successful president for all Americans.” She urged everyone to keep fighting for what they believe in saying, “This loss hurts, but please never stop believing that fighting for what’s right is worth it. It is, it is worth it. And so we need — we need you to keep up these fights now and for the rest of your lives. And to all the women, and especially the young women, who put their faith in this campaign and in me: I want you to know that nothing has made me prouder than to be your champion.” A video and transcript of Clinton’s speech is below.","text":"Hillary Clinton delivered her concession speech this morning in New York City. In the speech, Clinton thanked Tim Kaine and Anne Holton, her family, and the Obamas for all their support on the campaign trail. She also thanked her staff, campaign volunteers, and everyone who has supported the campaign by voting or donating. Clinton asked that everyone not be discouraged by the results saying that she hopes Donald Trump will be “a successful president for all Americans.” She urged everyone to keep fighting for what they believe in saying, “This loss hurts, but please never stop believing that fighting for what’s right is worth it. It is, it is worth it. And so we need — we need you to keep up these fights now and for the rest of your lives. And to all the women, and especially the young women, who put their faith in this campaign and in me: I want you to know that nothing has made me prouder than to be your champion.” A video and transcript of Clinton’s speech is below. TRANSCRIPT:Thank you. Thank you all very much. Thank you so much. A very rowdy group. Thank you, my friends. Thank you. Thank you. Thank you so very much for being here. I love you all, too. Last night I congratulated Donald Trump and offered to work with him on behalf of our country. I hope that he will be a successful president for all Americans. This is not the outcome we wanted or we worked so hard for, and I’m sorry we did not win this election for the values we share and the vision we hold for our country. But I feel pride and gratitude for this wonderful campaign that we built together. This vast, diverse, creative, unruly, energized campaign. You represent the best of America, and being your candidate has been one of the greatest honors of my life. I know how disappointed you feel, because I feel it too. And so do tens of millions of Americans who invested their hopes and dreams in this effort. This is painful, and it will be for a long time. But I want you to remember this. Our campaign was never about one person, or even one election. It was about the country we love and building an America that is hopeful, inclusive, and big-hearted. We have seen that our nation is more deeply divided than we thought. But I still believe in America, and I always will. And if you do, then we must accept this result and then look to the future. Donald Trump is going to be our president. We owe him an open mind and the chance to lead. Our constitutional democracy enshrines the peaceful transfer of power. We don’t just respect that. We cherish it. It also enshrines the rule of law; the principle we are all equal in rights and dignity; freedom of worship and expression. We respect and cherish these values, too, and we must defend them. Let me add: Our constitutional democracy demands our participation, not just every four years, but all the time. So let’s do all we can to keep advancing the causes and values we all hold dear. Making our economy work for everyone, not just those at the top, protecting our country and protecting our planet. And breaking down all the barriers that hold any American back from achieving their dreams. We spent a year and a half bringing together millions of people from every corner of our country to say with one voice that we believe that the American dream is big enough for everyone. For people of all races, and religions, for men and women, for immigrants, for LGBT people, and people with disabilities. For everyone. I am so grateful to stand with all of you. I want to thank Tim Kaine and Anne Holton for being our partners on this journey. It has been a joy get to go know them better and gives me great hope and comfort to know that Tim will remain on the front lines of our democracy representing Virginia in the Senate. To Barack and Michelle Obama, our country owes you an enormous debt of gratitude. We thank you for your graceful, determined leadership that has meant so much to so many Americans and people across the world. And to Bill and Chelsea, Mark, Charlotte, Aidan, our brothers and our entire family, my love for you means more than I can ever express. You crisscrossed this country, even 4-month-old Aidan, who traveled with his mom. I will always be grateful to the talented, dedicated men and women at our headquarters in Brooklyn and across our country. You poured your hearts into this campaign. To some of you who are veterans, it was a campaign after you had done other campaigns. Some of you, it was your first campaign. I want each of you to know that you were the best campaign anybody could have ever expected or wanted. And to the millions of volunteers, community leaders, activists and union organizers who knocked on doors, talked to their neighbors, posted on Facebook — even in secret private Facebook sites. I want everybody coming out from behind that and make sure your voices are heard going forward. To anyone that sent contributions, even as small as $5, that kept us going, thank you. To all of us, and to the young people in particular, I hope you will hear this — I have, as Tim said, I have spent my entire life fighting for what I believe in. I’ve had successes and setbacks and sometimes painful ones. Many of you are at the beginning of your professional, public, and political careers — you will have successes and setbacks too. This loss hurts, but please never stop believing that fighting for what’s right is worth it. It is, it is worth it. And so we need — we need you to keep up these fights now and for the rest of your lives. And to all the women, and especially the young women, who put their faith in this campaign and in me: I want you to know that nothing has made me prouder than to be your champion. Now, I know we have still not shattered that highest and hardest glass ceiling, but someday someone will — and hopefully sooner than we might think right now. And to all of the little girls who are watching this, never doubt that you are valuable and powerful and deserving of every chance and opportunity in the world to pursue and achieve your own dreams. Finally, finally, I am so grateful for our country and for all it has given to me. I count my blessings every single day that I am an American, and I still believe, as deeply as I ever have, that if we stand together and work together with respect for our differences, strengthen our convictions, and love for this nation, our best days are still ahead of us. Because, you know, I believe we are stronger together and we will go forward together. And you should never, ever regret fighting for that. You know, scripture tells us, let us not grow weary of doing good, for in good season we shall reap. My friends, let us have faith in each other, let us not grow weary and lose heart, for there are more seasons to come and there is more work to do. I am incredibly honored and grateful to have had this chance to represent all of you in this consequential election. May God bless you and may God bless the United States of America. Obama added, “We are now all rooting for his success in uniting and leading the country.” **President Barack Obama also held a press conference today in which he congratulated Trump on his victory and committed to a smooth transition of power. Obama said that he will meet with Trump at the White House on Thursday. He said that he is dedicated to ensuring a successful transition of power because that is how American democracy works. ** 演讲全文翻译谢谢你们。非常感谢大家。非常感谢。掌声很热烈。谢谢你们，我的朋友们。谢谢。谢谢。 谢谢大家来到这里。我也爱你们。昨天晚上，我向唐纳德·特朗普表示了祝贺，并表示愿意同他一起为我们的国家而奋斗。 我希望他能成为一名所有美国人心目中的成功总统。这份结果并非我们当初所愿或者拼搏至今的目标。我也很遗憾，我们没有凭借共有的价值观以及对这个国家未来的愿景而赢得这场选举。 对于我们亲手缔造的这场伟大竞选，我感到骄傲和感激。这场多元的、富有创造力的、活力四射的竞选活动。你们代表了美国最好的那个部分，能够做你们的候选人，是我一生中最大的荣耀之一。 我知道你们有多沮丧，因为我也一样。数千万将他们的希望和梦想投入这一努力的美国人也一样。这很痛苦，而且这种痛苦会持续很久。但是我希望你们能记住： 我们的竞选并非只关乎一个人，甚至也不只关乎一次选举。竞选是为了我们热爱的国家，为了缔造一个充满希望的、包容的和宽怀的美利坚。我们现在已经知道，这个国家远比我们想象的要更加分裂。但我仍然对美国充满信心，并将一直如此。如果你也同我一样，那我们就必须接受结果，面向未来。唐纳德·特朗普将要成为我们的总统，我们应当用开放的心胸去接纳他，给予他领导美国的机会。和平的权力交接正是我们的宪政民主一直标榜的。 我们不仅要尊重结果，我们要珍惜这个结果。它同样标榜了法治；标榜了权利和尊严平等的原则；信仰和表达的自由。我们尊重、珍惜这些价值，我们必须捍卫它们。 补充一句：在我们的宪政民主体制下，我们的参与不应只是四年一次的大选，而必须贯彻始终。所以，让我们继续尽己所能，推进我们所珍视的事业与价值：驱动我们的经济，为所有人服务，而不止是那些处在高位的人。保护我们的国家，保护我们的星球。 我们要打碎所有阻碍实现美国梦的藩篱。整整一年半的时间，我们将这个国家四面八方、数以百万计的人们团结在一起，发出同一个声音，因为我们相信，美国梦足够宏大，能够为所有人共享。无论的种族、宗教、性别，无论你是移民、LGBT人士还是残疾人士，你都可以拥有这份美国梦。 能够和你们所有人站在一起，我内心无比感激。我想感谢我的搭档蒂姆·凯恩和安妮·霍尔顿这一路的陪伴。 我享受和他们不断熟悉的过程，而蒂姆将担任弗吉尼亚州国会参议员、奋斗在民主一线的消息也给了我很多希望与慰藉。 对于奥巴马夫妇，整个国家欠你们一声由衷的感谢。 感谢你们的优雅风度、意志坚定的领导力，这对美国人民和世界各国人民都意义非凡。比尔、切尔西、马克、夏洛特、艾丹，我的兄弟们、家族的亲人们，我对你们的爱已经难以用言语表达。你们同我一起到过无数的地方竞选，甚至才4个月大的艾丹都要跟着妈妈奔波。我也对布鲁克林总部和全美其他竞选中心里那些智慧、忠诚的工作人员与志愿者们非常感激。 你们在竞选中倾入心血。有的人有着丰富竞选经验，在多次参与竞选后加入了团队，有的人是第一次参与竞选活动。我想让你们知道，你们是任何一个参选人能够期待的最棒的竞选人员。 成千上万的志愿者、社区领袖、活动认识、工会组织者们，你们努力敲门发动选民、与邻居们交谈、通过FB页面发消息——有时甚至是在一些私密页面中发声。 我希望你们能够从幕后走到台前来，发出你们的声音，确保你们的声音能够继续传播下去。 对于所有支持我们前行的捐款者，即便是5美元的金额，谢谢你们。所有人，尤其是年轻人，我希望你们能听到这一点：我的确，就像蒂姆说的那样，倾尽一生，为我的信仰而奋斗。 我有过成功也有挫折，有的时候，是很痛苦的挫折。你们当中的很多人，都处于职业的开端，无论是公共领域还是政治领域，你们也会遇到成功和挫折。这次的失败让人受伤，但是请不要停止相信：为正确的信念而奋斗，是值得的。的确，是值得的。 所以我们需要，我们需要你们继续这些奋斗，奋斗于当下，奋斗终生。同时，对所有将信念加诸这场竞选以及我身上的女性，特别是年轻女性们，我希望你们知道，没有什么比成为你们的捍卫者更让我感到骄傲的了。 我们还没有打破这层最高的和最坚硬的天花板玻璃，但是，有一天，有一个人会的。希望这一天要比我们现在觉得的，来得更早。 我想对所有在观看我演讲的小女孩们说，永远不要怀疑自己的价值和能力，你应该去抓住世界上每一次机会，去追求与实现自己的梦想。 最后，最后，我非常感谢我们的国家，以及它给予我的一切。 我每一天都感恩自己是一个美国人，而且我仍然和从前一样深信着，如果我们站在一起、共同奋斗，并尊重我们之间的分歧，不断强化我们对这个国家的信念和爱，最美好的日子仍会在未来等着我们。 因为，我相信我们在一起将变得更强大，而且我们必将一同前进。你永远、永远不应该对为此奋斗过而感到后悔。 圣经告诉我们：“不厌倦因为好的原因做好事，这样我们就会有收获。” 我的朋友们，让我们对彼此有信心，不要疲惫和灰心，因为还会有更多好的原因出现，更多的工作要做。 我非常荣幸和感激，能有机会在这次影响深远的选举中代表你们所有人。希望上帝保佑你们，希望上帝保佑美利坚合众国。 Source General Election Results","categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"}],"tags":[]},{"title":"【Machine Learning】机器学习：简明入门指南","slug":"【Machine Learning】机器学习：简明入门指南","date":"2016-08-14T09:32:55.000Z","updated":"2022-12-22T06:13:40.216Z","comments":true,"path":"2016/08/14/【Machine Learning】机器学习：简明入门指南/","link":"","permalink":"http://www.yakjs.com/2016/08/14/%E3%80%90Machine%20Learning%E3%80%91%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%AE%80%E6%98%8E%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/","excerpt":"本文是一篇转载自伯乐在线的译文，英文原文是这里：Machine Learning is Fun! — by Adam Geitgey 在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！ 本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了“机器学习” ——维基百科词条，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。 本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。","text":"本文是一篇转载自伯乐在线的译文，英文原文是这里：Machine Learning is Fun! — by Adam Geitgey 在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！ 本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了“机器学习” ——维基百科词条，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。 本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。 何为机器学习？机器学习这个概念认为，对于待解问题，你无需编写任何专门的程序代码，遗传算法（generic algorithms）能够在数据集上为你得出有趣的答案。对于遗传算法，不用编码，而是将数据输入，它将在数据之上建立起它自己的逻辑。 举个例子，有一类算法称为分类算法，它可以将数据划分为不同的组别。一个用来识别手写数字的分类算法，不用修改一行代码，就可以用来将电子邮件分为垃圾邮件和普通邮件。算法没变，但是输入的训练数据变了，因此它得出了不同的分类逻辑。 机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。 “机器学习”是一个涵盖性术语，覆盖了大量类似的遗传算法。 两类机器学习算法你可以认为机器学习算法分为两大类：监督式学习（Supervised Learning）和非监督式学习（Unsupervised Learning）。两者区别很简单，但却非常重要。 监督式学习假设你是一名房产经纪，生意越做越大，因此你雇了一批实习生来帮你。但是问题来了——你可以看一眼房子就知道它到底值多少钱，实习生没有经验，不知道如何估价。 为了帮助你的实习生（也许是为了解放你自己去度个假），你决定写个小软件，可以根据房屋大小、地段以及类似房屋的成交价等因素来评估你所在地区房屋的价值。 你把3个月来城里每笔房屋交易都写了下来，每一单你都记录了一长串的细节——卧室数量、房屋大小、地段等等。但最重要的是，你写下了最终的成交价： 这是我们的“训练数据”: 我们要利用这些训练数据来编写一个程序来估算该地区其他房屋的价值： 这就称为监督式学习。你已经知道每一栋房屋的售价，换句话说，你知道问题的答案，并可以反向找出解题的逻辑。 为了编写软件，你将包含每一套房产的训练数据输入你的机器学习算法。算法尝试找出应该使用何种运算来得出价格数字。 这就像是算术练习题，算式中的运算符号都被擦去了：天哪！一个阴险的学生将老师答案上的算术符号全擦去了。 看了这些题，你能明白这些测验里面是什么样的数学问题吗？你知道，你应该对算式左边的数字“做些什么”以得出算式右边的答案。 在监督式学习中，你是让计算机为你算出数字间的关系。而一旦你知道了解决这类特定问题所需要的数学方法后，你就可以解答同类的其它问题了。 非监督式学习让我们回到开头那个房地产经纪的例子。要是你不知道每栋房子的售价怎么办？即使你所知道的只是房屋的大小、位置等信息，你也可以搞出很酷的花样。这就是所谓的非监督式学习。 即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。 这就有点像有人给你一张纸，上面列出了很多数字，然后对你说:“我不知道这些数字有什么意义，也许你能从中找出规律或是能将它们分类，或是其它什么-祝你好运！” 你该怎么处理这些数据呢？首先，你可以用个算法自动地从数据中划分出不同的细分市场。也许你会发现大学附近的买房者喜欢户型小但卧室多的房子，而郊区的买房者偏好三卧室的大户型。这些信息可以直接帮助你的营销。 你还可以作件很酷的事，自动找出房价的离群数据，即与其它数据迥异的值。这些鹤立鸡群的房产也许是高楼大厦，而你可以将最优秀的推销员集中在这些地区，因为他们的佣金更高。 本文余下部分我们主要讨论监督式学习，但这并不是因为非监督式学习用处不大或是索然无味。实际上，随着算法改良，不用将数据和正确答案联系在一起，因此非监督式学习正变得越来越重要。 老学究请看:还有很多其它种类的机器学习算法。但初学时这样理解不错了。 太酷了，但是评估房价真能被看作“学习”吗？作为人类的一员，你的大脑可以应付绝大多数情况，并且没有任何明确指令也能够学习如何处理这些情况。如果你做房产经纪时间很长，你对于房产的合适定价、它的最佳营销方式以及哪些客户会感兴趣等等都会有一种本能般的“感觉”。强人工智能（Strong AI）研究的目标就是要能够用计算机复制这种能力。 但是目前的机器学习算法还没有那么好——它们只能专注于非常特定的、有限的问题。也许在这种情况下，“学习”更贴切的定义是“在少量范例数据的基础上找出一个等式来解决特定的问题”。 不幸的是，“机器在少量范例数据的基础上找出一个等式来解决特定的问题”这个名字太烂了。所以最后我们用“机器学习”取而代之。 当然，要是你是在50年之后来读这篇文章，那时我们已经得出了强人工智能算法，而本文看起来就像个老古董。未来的人类，你还是别读了，叫你的机器仆人给你做份三明治吧。 让我们写代码吧!前面例子中评估房价的程序，你打算怎么写呢？往下看之前，先思考一下吧。 如果你对机器学习一无所知，很有可能你会尝试写出一些基本规则来评估房价，如下： 123456789101112131415161718192021222324252627def estimate_house_sales_price(num_of_bedrooms, sqft, neighborhood): price = 0 # In my area, the average house costs $200 per sqft price_per_sqft = 200 if neighborhood == &quot;hipsterton&quot;: # but some areas cost a bit more price_per_sqft = 400 elif neighborhood == &quot;skid row&quot;: # and some areas cost less price_per_sqft = 100 # start with a base price estimate based on how big the place is price = price_per_sqft * sqft # now adjust our estimate based on the number of bedrooms if num_of_bedrooms == 0: # Studio apartments are cheap price = price — 20000 else: # places with more bedrooms are usually # more valuable price = price + (num_of_bedrooms * 1000) return price 假如你像这样瞎忙几个小时，也许会取得一点成效，但是你的程序永不会完美，而且当价格变化时很难维护。 如果能让计算机找出实现上述函数功能的办法，这样岂不更好？只要返回的房价数字正确，谁会在乎函数具体干了些什么呢？ 1234def estimate_house_sales_price(num_of_bedrooms, sqft, neighborhood): price = &lt;computer, plz do some math for me&gt; return price 考虑这个问题的一种角度是将房价看做一碗美味的汤，而汤中成分就是卧室数、面积和地段。如果你能算出每种成分对最终的价格有多大影响，也许就能得到各种成分混合起来形成最终价格的具体比例。 这样可以将你最初的程序（全是疯狂的if else语句）简化成类似如下的样子： 12345678910111213141516def estimate_house_sales_price(num_of_bedrooms, sqft, neighborhood): price = 0 # a little pinch of this price += num_of_bedrooms * .841231951398213 # and a big pinch of that price += sqft * 1231.1231231 # maybe a handful of this price += neighborhood * 2.3242341421 # and finally, just a little extra salt for good measure price += 201.23432095 return price 请注意那些用粗体标注的神奇数字——**.841231951398213**, 1231.1231231,2.3242341421, 和201.23432095。它们称为权重。如果我们能找出对每栋房子都适用的完美权重，我们的函数就能预测所有的房价！ 找出最佳权重的一种笨办法如下所示： 步骤1：首先，将每个权重都设为1.0： 12345678910111213141516def estimate_house_sales_price(num_of_bedrooms, sqft, neighborhood): price = 0 # a little pinch of this price += num_of_bedrooms * 1.0 # and a big pinch of that price += sqft * 1.0 # maybe a handful of this price += neighborhood * 1.0 # and finally, just a little extra salt for good measure price += 1.0 return price 步骤2：将每栋房产带入你的函数运算，检验估算值与正确价格的偏离程度： 运用你的程序预测房屋价格。 例如：上表中第一套房产实际成交价为25万美元，你的函数估价为17.8万，这一套房产你就差了7.2万。 再将你的数据集中的每套房产估价偏离值平方后求和。假设数据集中有500套房产交易，估价偏离值平方求和总计为86,123,373美元。这就反映了你的函数现在的“正确”程度。 现在，将总计值除以500，得到每套房产的估价偏离平均值。将这个平均误差值称为你函数的代价。 如果你能调整权重使得这个代价变为0，你的函数就完美了。它意味着，根据输入的数据，你的程序对每一笔房产交易的估价都是分毫不差。而这就是我们的目标——尝试不同的权重值以使代价尽可能的低。 步骤3：不断重复步骤2，尝试所有可能的权重值组合。哪一个组合使得代价最接近于0，它就是你要使用的，你只要找到了这样的组合，问题就得到了解决! 思想扰动时间这太简单了，对吧？想一想刚才你做了些什么。你取得了一些数据，将它们输入至三个通用的简单步骤中，最后你得到了一个可以对你所在区域的房屋进行估价的函数。房价网，要当心咯！但是下面的事实可能会扰乱你的思想： 1.过去40年来，很多领域（如语言学/翻译学）的研究表明，这种通用的“搅动数据汤”（我编造的词）式的学习算法已经胜过了需要利用真人明确规则的方法。机器学习的“笨”办法最终打败了人类专家。 2.你最后写出的函数真是笨，它甚至不知道什么是“面积”和“卧室数”。它知道的只是搅动，改变数字来得到正确的答案。 3.很可能你都不知道为何一组特殊的权重值能起效。所以你只是写出了一个你实际上并不理解却能证明的函数。 4.试想一下，你的程序里没有类似“面积”和“卧室数”这样的参数，而是接受了一组数字。假设每个数字代表了你车顶安装的摄像头捕捉的画面中的一个像素，再将预测的输出不称为“价格”而是叫做“方向盘转动度数”，这样你就得到了一个程序可以自动操纵你的汽车了！ 太疯狂了，对吧？ 步骤3中的“尝试每个数字”怎么回事？好吧，当然你不可能尝试所有可能的权重值来找到效果最好的组合。那可真要花很长时间，因为要尝试的数字可能无穷无尽。 为避免这种情况，数学家们找到了很多聪明的办法（比如Gradient descent算法）来快速找到优秀的权重值，而不需要尝试过多。下面是其中一种： 首先，写出一个简单的等式表示前述步骤2，这是你的代价函数： 接着，让我们将这同一个等式用机器学习的数学术语（现在你可以忽略它们）进行重写： θ表示当前的权重值。 J(θ) 意为“当前权重值对应的代价”。 这个等式表示我们的估价程序在当前权重值下偏离程度的大小。如果将所有赋给卧室数和面积的可能权重值以图形形式显示，我们会得到类似下图的图表： 代价函数的图形像一支碗。纵轴表示代价。 图中蓝色的最低点就是代价最低的地方——即我们的程序偏离最小。最高点意味着偏离最大。所以，如果我们能找到一组权重值带领我们到达图中的最低点，我们就找到了答案！ 因此，我们只需要调整权重值使我们在图上能向着最低点“走下坡路”。如果对于权重的细小调节能一直使我们保持向最低点移动，那么最终我们不用尝试太多权重值就能到达那里。 如果你还记得一点微积分的话，你也许记得如果你对一个函数求导，结果会告诉你函数在任一点的斜率。换句话说，对于图上给定一点，它告诉我们那条路是下坡路。我们可以利用这一点朝底部进发。 所以，如果我们对代价函数关于每一个权重求偏导，那么我们就可以从每一个权重中减去该值。这样可以让我们更加接近山底。一直这样做，最终我们将到达底部，得到权重的最优值。（读不懂？不用担心，接着往下读）。 这种找出最佳权重的办法被称为批量梯度下降，上面是对它的高度概括。如果想搞懂细节，不要害怕，继续深入下去吧。 当你使用机器学习算法库来解决实际问题，所有这些都已经为你准备好了。但明白一些具体细节总是有用的。 还有什么你随便就略过了？上面我描述的三步算法被称为多元线性回归。你估算等式是在求一条能够拟合所有房价数据点的直线。然后，你再根据房价在你的直线上可能出现的位置用这个等式来估算从未见过的房屋的价格。这个想法威力强大，可以用它来解决“实际”问题。 但是，我为你展示的这种方法可能在简单的情况下有效，它不会在所有情况下都有用。原因之一是因为房价不会一直那么简单地跟随一条连续直线。 但是，幸运的是，有很多办法来处理这种情况。对于非线性数据，很多其他类型的机器学习算法可以处理（如神经网络或有核向量机）。还有很多方法运用线性回归更灵活，想到了用更复杂的线条来拟合。在所有的情况中，寻找最优权重值这一基本思路依然适用。 还有，我忽略了过拟合的概念。很容易碰上这样一组权重值，它们对于你原始数据集中的房价都能完美预测，但对于原始数据集之外的任何新房屋都预测不准。这种情况的解决之道也有不少（如正则化以及使用交叉验证数据集）。学会如何处理这一问题对于顺利应用机器学习至关重要。 换言之，基本概念非常简单，要想运用机器学习得到有用的结果还需要一些技巧和经验。但是，这是每个开发者都能学会的技巧。 机器学习法力无边吗？一旦你开始明白机器学习技术很容易应用于解决貌似很困难的问题（如手写识别），你心中会有一种感觉，只要有足够的数据，你就能够用机器学习解决任何问题。只需要将数据输入进去，就能看到计算机变戏法一样找出拟合数据的等式。 但是很重要的一点你要记住，机器学习只能对用你占有的数据实际可解的问题才适用。 例如，如果你建立了一个模型来根据每套房屋内盆栽数量来预测房价，它就永远不会成功。房屋内盆栽数量和房价之间没有任何的关系。所以，无论它怎么去尝试，计算机也推导不出两者之间的关系。 你只能对实际存在的关系建模。 怎样深入学习机器学习我认为，当前机器学习的最大问题是它主要活跃于学术界和商业研究组织中。对于圈外想要有个大体了解而不是想成为专家的人们，简单易懂的学习资料不多。但是这一情况每一天都在改善。 吴恩达教授（Andrew Ng）在Coursera上的机器学习免费课程非常不错。我强烈建议由此入门。任何拥有计算机科学学位、还能记住一点点数学的人应该都能理解。 另外，你还可以下载安装SciKit-Learn，用它来试验成千上万的机器学习算法。它是一个python框架，对于所有的标准算法都有“黑盒”版本。","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.yakjs.com/categories/Machine-Learning/"}],"tags":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.yakjs.com/tags/Machine-Learning/"}]},{"title":"Java 8系列之重新认识HashMap","slug":"Java 8系列之重新认识HashMap","date":"2016-06-24T03:58:55.000Z","updated":"2022-12-22T07:33:43.340Z","comments":true,"path":"2016/06/24/Java 8系列之重新认识HashMap/","link":"","permalink":"http://www.yakjs.com/2016/06/24/Java%208%E7%B3%BB%E5%88%97%E4%B9%8B%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86HashMap/","excerpt":"本文来自美团点评技术团队： Java 8系列之重新认识HashMap 摘要HashMap是Java程序员使用频率最高的用于映射(键值对)处理的数据类型。随着JDK（Java Developmet Kit）版本的更新，JDK1.8对HashMap底层的实现进行了优化，例如引入红黑树的数据结构和扩容的优化等。本文结合JDK1.7和JDK1.8的区别，深入探讨HashMap的结构实现和功能原理。 简介Java为数据结构中的映射定义了一个接口java.util.Map，此接口主要有四个常用的实现类，分别是HashMap、Hashtable、LinkedHashMap和TreeMap，类继承关系如下图所示：","text":"本文来自美团点评技术团队： Java 8系列之重新认识HashMap 摘要HashMap是Java程序员使用频率最高的用于映射(键值对)处理的数据类型。随着JDK（Java Developmet Kit）版本的更新，JDK1.8对HashMap底层的实现进行了优化，例如引入红黑树的数据结构和扩容的优化等。本文结合JDK1.7和JDK1.8的区别，深入探讨HashMap的结构实现和功能原理。 简介Java为数据结构中的映射定义了一个接口java.util.Map，此接口主要有四个常用的实现类，分别是HashMap、Hashtable、LinkedHashMap和TreeMap，类继承关系如下图所示： 下面针对各个实现类的特点做一些说明： (1) HashMap：它根据键的hashCode值存储数据，大多数情况下可以直接定位到它的值，因而具有很快的访问速度，但遍历顺序却是不确定的。 HashMap最多只允许一条记录的键为null，允许多条记录的值为null。HashMap非线程安全，即任一时刻可以有多个线程同时写HashMap，可能会导致数据的不一致。如果需要满足线程安全，可以用 Collections的synchronizedMap方法使HashMap具有线程安全的能力，或者使用ConcurrentHashMap。 (2) Hashtable：Hashtable是遗留类，很多映射的常用功能与HashMap类似，不同的是它承自Dictionary类，并且是线程安全的，任一时间只有一个线程能写Hashtable，并发性不如ConcurrentHashMap，因为ConcurrentHashMap引入了分段锁。Hashtable不建议在新代码中使用，不需要线程安全的场合可以用HashMap替换，需要线程安全的场合可以用ConcurrentHashMap替换。 (3) LinkedHashMap：LinkedHashMap是HashMap的一个子类，保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的，也可以在构造时带参数，按照访问次序排序。 (4) TreeMap：TreeMap实现SortedMap接口，能够把它保存的记录根据键排序，默认是按键值的升序排序，也可以指定排序的比较器，当用Iterator遍历TreeMap时，得到的记录是排过序的。如果使用排序的映射，建议使用TreeMap。在使用TreeMap时，key必须实现Comparable接口或者在构造TreeMap传入自定义的Comparator，否则会在运行时抛出java.lang.ClassCastException类型的异常。 对于上述四种Map类型的类，要求映射中的key是不可变对象。不可变对象是该对象在创建后它的哈希值不会被改变。如果对象的哈希值发生变化，Map对象很可能就定位不到映射的位置了。 通过上面的比较，我们知道了HashMap是Java的Map家族中一个普通成员，鉴于它可以满足大多数场景的使用条件，所以是使用频度最高的一个。下文我们主要结合源码，从存储结构、常用方法分析、扩容以及安全性等方面深入讲解HashMap的工作原理。 内部实现搞清楚HashMap，首先需要知道HashMap是什么，即它的存储结构-字段；其次弄明白它能干什么，即它的功能实现-方法。下面我们针对这两个方面详细展开讲解。 存储结构-字段从结构实现来讲，HashMap是数组+链表+红黑树（JDK1.8增加了红黑树部分）实现的，如下如所示。 这里需要讲明白两个问题：数据底层具体存储的是什么？这样的存储方式有什么？优点呢？ (1) 从源码可知，HashMap类中有一个非常重要的字段，就是 Node[] table，即哈希桶数组，明显它是一个Node的数组。我们来看Node[JDK1.8]是何物。 1234567891011121314static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123; final int hash; //用来定位数组索引位置 final K key; V value; Node&lt;K,V&gt; next; //链表的下一个node Node(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; ... &#125; public final K getKey()&#123; ... &#125; public final V getValue() &#123; ... &#125; public final String toString() &#123; ... &#125; public final int hashCode() &#123; ... &#125; public final V setValue(V newValue) &#123; ... &#125; public final boolean equals(Object o) &#123; ... &#125;&#125; Node是HashMap的一个内部类，实现了Map.Entry接口，本质是就是一个映射(键值对)。上图中的每个黑色圆点就是一个Node对象。 (2) HashMap就是使用哈希表来存储的。哈希表为解决冲突，可以采用开放地址法和链地址法等来解决问题，Java中HashMap采用了链地址法。链地址法，简单来说，就是数组加链表的结合。在每个数组元素上都一个链表结构，当数据被Hash后，得到数组下标，把数据放在对应下标元素的链表上。例如程序执行下面代码： 1map.put(&quot;美团&quot;,&quot;小美&quot;); 系统将调用”美团”这个key的hashCode()方法得到其hashCode 值（该方法适用于每个Java对象），然后再通过Hash算法的后两步运算（高位运算和取模运算，下文有介绍）来定位该键值对的存储位置，有时两个key会定位到相同的位置，表示发生了Hash碰撞。当然Hash算法计算结果越分散均匀，Hash碰撞的概率就越小，map的存取效率就会越高。 如果哈希桶数组很大，即使较差的Hash算法也会比较分散，如果哈希桶数组数组很小，即使好的Hash算法也会出现较多碰撞，所以就需要在空间成本和时间成本之间权衡，其实就是在根据实际情况确定哈希桶数组的大小，并在此基础上设计好的hash算法减少Hash碰撞。那么通过什么方式来控制map使得Hash碰撞的概率又小，哈希桶数组（Node[] table）占用空间又少呢？答案就是好的Hash算法和扩容机制。 在理解Hash和扩容流程之前，我们得先了解下HashMap的几个字段。从HashMap的默认构造函数源码可知，构造函数就是对下面几个字段进行初始化，源码如下： 1234int threshold; // 所能容纳的key-value对极限 final float loadFactor; // 负载因子int modCount; int size; 首先，Node[] table的初始化长度length(默认值是16)，Load factor为负载因子(默认值是0.75)，threshold是HashMap所能容纳的最大数据量的Node(键值对)个数。threshold = length * Load factor。也就是说，在数组定义好长度之后，负载因子越大，所能容纳的键值对个数越多。 结合负载因子的定义公式可知，threshold就是在此Load factor和length(数组长度)对应下允许的最大元素数目，超过这个数目就重新resize(扩容)，扩容后的HashMap容量是之前容量的两倍。默认的负载因子0.75是对空间和时间效率的一个平衡选择，建议大家不要修改，除非在时间和空间比较特殊的情况下，如果内存空间很多而又对时间效率要求很高，可以降低负载因子Load factor的值；相反，如果内存空间紧张而对时间效率要求不高，可以增加负载因子loadFactor的值，这个值可以大于1。 size这个字段其实很好理解，就是HashMap中实际存在的键值对数量。注意和table的长度length、容纳最大键值对数量threshold的区别。而modCount字段主要用来记录HashMap内部结构发生变化的次数，主要用于迭代的快速失败。强调一点，内部结构发生变化指的是结构发生变化，例如put新键值对，但是某个key对应的value值被覆盖不属于结构变化。 在HashMap中，哈希桶数组table的长度length大小必须为2的n次方(一定是合数)，这是一种非常规的设计，常规的设计是把桶的大小设计为素数。相对来说素数导致冲突的概率要小于合数，具体证明可以参考http://blog.csdn.net/liuqiyao_01/article/details/14475159 ，Hashtable初始化桶大小为11，就是桶大小设计为素数的应用（Hashtable扩容后不能保证还是素数）。HashMap采用这种非常规设计，主要是为了在取模和扩容时做优化，同时为了减少冲突，HashMap定位哈希桶索引位置时，也加入了高位参与运算的过程。 这里存在一个问题，即使负载因子和Hash算法设计的再合理，也免不了会出现拉链过长的情况，一旦出现拉链过长，则会严重影响HashMap的性能。于是，在JDK1.8版本中，对数据结构做了进一步的优化，引入了红黑树。而当链表长度太长（默认超过8）时，链表就转换为红黑树，利用红黑树快速增删改查的特点提高HashMap的性能，其中会用到红黑树的插入、删除、查找等算法。本文不再对红黑树展开讨论，想了解更多红黑树数据结构的工作原理可以参考http://blog.csdn.net/v_july_v/article/details/6105630 。 功能实现-方法HashMap的内部功能实现很多，本文主要从根据key获取哈希桶数组索引位置、put方法的详细执行、扩容过程三个具有代表性的点深入展开讲解。 1. 确定哈希桶数组索引位置不管增加、删除、查找键值对，定位到哈希桶数组的位置都是很关键的第一步。前面说过HashMap的数据结构是数组和链表的结合，所以我们当然希望这个HashMap里面的元素位置尽量分布均匀些，尽量使得每个位置上的元素数量只有一个，那么当我们用hash算法求得这个位置的时候，马上就可以知道对应位置的元素就是我们要的，不用遍历链表，大大优化了查询的效率。HashMap定位数组索引位置，直接决定了hash方法的离散性能。先看看源码的实现(方法一+方法二): 1234567891011方法一：static final int hash(Object key) &#123; //jdk1.8 &amp; jdk1.7 int h; // h = key.hashCode() 为第一步 取hashCode值 // h ^ (h &gt;&gt;&gt; 16) 为第二步 高位参与运算 return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);&#125;方法二：static int indexFor(int h, int length) &#123; //jdk1.7的源码，jdk1.8没有这个方法，但是实现原理一样的 return h &amp; (length-1); //第三步 取模运算&#125; 这里的Hash算法本质上就是三步：取key的hashCode值、高位运算、取模运算。 对于任意给定的对象，只要它的hashCode()返回值相同，那么程序调用方法一所计算得到的Hash码值总是相同的。我们首先想到的就是把hash值对数组长度取模运算，这样一来，元素的分布相对来说是比较均匀的。但是，模运算的消耗还是比较大的，在HashMap中是这样做的：调用方法二来计算该对象应该保存在table数组的哪个索引处。 这个方法非常巧妙，它通过h &amp; (table.length -1)来得到该对象的保存位，而HashMap底层数组的长度总是2的n次方，这是HashMap在速度上的优化。当length总是2的n次方时，h&amp; (length-1)运算等价于对length取模，也就是h%length，但是&amp;比%具有更高的效率。 在JDK1.8的实现中，优化了高位运算的算法，通过hashCode()的高16位异或低16位实现的：(h = k.hashCode()) ^ (h &gt;&gt;&gt; 16)，主要是从速度、功效、质量来考虑的，这么做可以在数组table的length比较小的时候，也能保证考虑到高低Bit都参与到Hash的计算中，同时不会有太大的开销。 下面举例说明下，n为table的长度。 2. 分析HashMap的put方法HashMap的put方法执行过程可以通过下图来理解，自己有兴趣可以去对比源码更清楚地研究学习。 ①. 判断键值对数组table[i]是否为空或为null，否则执行resize()进行扩容； ②. 根据键值key计算hash值得到插入的数组索引i，如果table[i]==null，直接新建节点添加，转向⑥，如果table[i]不为空，转向③； ③. 判断table[i]的首个元素是否和key一样，如果相同直接覆盖value，否则转向④，这里的相同指的是hashCode以及equals； ④. 判断table[i] 是否为treeNode，即table[i] 是否是红黑树，如果是红黑树，则直接在树中插入键值对，否则转向⑤； ⑤. 遍历table[i]，判断链表长度是否大于8，大于8的话把链表转换为红黑树，在红黑树中执行插入操作，否则进行链表的插入操作；遍历过程中若发现key已经存在直接覆盖value即可； ⑥. 插入成功后，判断实际存在的键值对数量size是否超多了最大容量threshold，如果超过，进行扩容。 JDK1.8HashMap的put方法源码如下: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556public V put(K key, V value) &#123; // 对key的hashCode()做hash return putVal(hash(key), key, value, false, true);&#125;final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) &#123; Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i; // 步骤①：tab为空则创建 if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; // 步骤②：计算index，并对null做处理 if ((p = tab[i = (n - 1) &amp; hash]) == null) tab[i] = newNode(hash, key, value, null); else &#123; Node&lt;K,V&gt; e; K k; // 步骤③：节点key存在，直接覆盖value if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) e = p; // 步骤④：判断该链为红黑树 else if (p instanceof TreeNode) e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value); // 步骤⑤：该链为链表 else &#123; for (int binCount = 0; ; ++binCount) &#123; if ((e = p.next) == null) &#123; p.next = newNode(hash, key,value,null); //链表长度大于8转换为红黑树进行处理 if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; &#125; // key已经存在直接覆盖value if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) break; p = e; &#125; &#125; if (e != null) &#123; // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); return oldValue; &#125; &#125; ++modCount; // 步骤⑥：超过最大容量 就扩容 if (++size &gt; threshold) resize(); afterNodeInsertion(evict); return null;&#125; 3. 扩容机制扩容(resize)就是重新计算容量，向HashMap对象里不停的添加元素，而HashMap对象内部的数组无法装载更多的元素时，对象就需要扩大数组的长度，以便能装入更多的元素。当然Java里的数组是无法自动扩容的，方法是使用一个新的数组代替已有的容量小的数组，就像我们用一个小桶装水，如果想装更多的水，就得换大水桶。 我们分析下resize的源码，鉴于JDK1.8融入了红黑树，较复杂，为了便于理解我们仍然使用JDK1.7的代码，好理解一些，本质上区别不大，具体区别后文再说。 12345678910111213void resize(int newCapacity) &#123; //传入新的容量 Entry[] oldTable = table; //引用扩容前的Entry数组 int oldCapacity = oldTable.length; if (oldCapacity == MAXIMUM_CAPACITY) &#123; //扩容前的数组大小如果已经达到最大(2^30)了 threshold = Integer.MAX_VALUE; //修改阈值为int的最大值(2^31-1)，这样以后就不会扩容了 return; &#125; Entry[] newTable = new Entry[newCapacity]; //初始化一个新的Entry数组 transfer(newTable); //！！将数据转移到新的Entry数组里 table = newTable; //HashMap的table属性引用新的Entry数组 threshold = (int)(newCapacity * loadFactor);//修改阈值&#125; 这里就是使用一个容量更大的数组来代替已有的容量小的数组，transfer()方法将原有Entry数组的元素拷贝到新的Entry数组里。 1234567891011121314151617void transfer(Entry[] newTable) &#123; Entry[] src = table; //src引用了旧的Entry数组 int newCapacity = newTable.length; for (int j = 0; j &lt; src.length; j++) &#123; //遍历旧的Entry数组 Entry&lt;K,V&gt; e = src[j]; //取得旧Entry数组的每个元素 if (e != null) &#123; src[j] = null;//释放旧Entry数组的对象引用（for循环后，旧的Entry数组不再引用任何对象） do &#123; Entry&lt;K,V&gt; next = e.next; int i = indexFor(e.hash, newCapacity); //！！重新计算每个元素在数组中的位置 e.next = newTable[i]; //标记[1] newTable[i] = e; //将元素放在数组上 e = next; //访问下一个Entry链上的元素 &#125; while (e != null); &#125; &#125;&#125; newTable[i]的引用赋给了e.next，也就是使用了单链表的头插入方式，同一位置上新元素总会被放在链表的头部位置；这样先放在一个索引上的元素终会被放到Entry链的尾部(如果发生了hash冲突的话），这一点和Jdk1.8有区别，下文详解。在旧数组中同一条Entry链上的元素，通过重新计算索引位置后，有可能被放到了新数组的不同位置上。 下面举个例子说明下扩容过程。假设了我们的hash算法就是简单的用key mod 一下表的大小（也就是数组的长度）。其中的哈希桶数组table的size=2， 所以key = 3、7、5，put顺序依次为 5、7、3。在mod 2以后都冲突在table[1]这里了。这里假设负载因子 loadFactor=1，即当键值对的实际大小size 大于 table的实际大小时进行扩容。接下来的三个步骤是哈希桶数组 resize成4，然后所有的Node重新rehash的过程。 下面我们讲解下JDK1.8做了哪些优化。经过观测可以发现，我们使用的是2次幂的扩展(指长度扩为原来2倍)，所以，元素的位置要么是在原位置，要么是在原位置再移动2次幂的位置。看下图可以明白这句话的意思，n为table的长度，图（a）表示扩容前的key1和key2两种key确定索引位置的示例，图（b）表示扩容后key1和key2两种key确定索引位置的示例，其中hash1是key1对应的哈希与高位运算结果。 元素在重新计算hash之后，因为n变为2倍，那么n-1的mask范围在高位多1bit(红色)，因此新的index就会发生这样的变化： 因此，我们在扩充HashMap的时候，不需要像JDK1.7的实现那样重新计算hash，只需要看看原来的hash值新增的那个bit是1还是0就好了，是0的话索引没变，是1的话索引变成“原索引+oldCap”，可以看看下图为16扩充为32的resize示意图： 这个设计确实非常的巧妙，既省去了重新计算hash值的时间，而且同时，由于新增的1bit是0还是1可以认为是随机的，因此resize的过程，均匀的把之前的冲突的节点分散到新的bucket了。这一块就是JDK1.8新增的优化点。有一点注意区别，JDK1.7中rehash的时候，旧链表迁移新链表的时候，如果在新表的数组索引位置相同，则链表元素会倒置，但是从上图可以看出，JDK1.8不会倒置。有兴趣的同学可以研究下JDK1.8的resize源码，写的很赞，如下: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182final Node&lt;K,V&gt;[] resize() &#123; Node&lt;K,V&gt;[] oldTab = table; int oldCap = (oldTab == null) ? 0 : oldTab.length; int oldThr = threshold; int newCap, newThr = 0; if (oldCap &gt; 0) &#123; // 超过最大值就不再扩充了，就只好随你碰撞去吧 if (oldCap &gt;= MAXIMUM_CAPACITY) &#123; threshold = Integer.MAX_VALUE; return oldTab; &#125; // 没超过最大值，就扩充为原来的2倍 else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp; oldCap &gt;= DEFAULT_INITIAL_CAPACITY) newThr = oldThr &lt;&lt; 1; // double threshold &#125; else if (oldThr &gt; 0) // initial capacity was placed in threshold newCap = oldThr; else &#123; // zero initial threshold signifies using defaults newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); &#125; // 计算新的resize上限 if (newThr == 0) &#123; float ft = (float)newCap * loadFactor; newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); &#125; threshold = newThr; @SuppressWarnings(&#123;&quot;rawtypes&quot;，&quot;unchecked&quot;&#125;) Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap]; table = newTab; if (oldTab != null) &#123; // 把每个bucket都移动到新的buckets中 for (int j = 0; j &lt; oldCap; ++j) &#123; Node&lt;K,V&gt; e; if ((e = oldTab[j]) != null) &#123; oldTab[j] = null; if (e.next == null) newTab[e.hash &amp; (newCap - 1)] = e; else if (e instanceof TreeNode) ((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap); else &#123; // 链表优化重hash的代码块 Node&lt;K,V&gt; loHead = null, loTail = null; Node&lt;K,V&gt; hiHead = null, hiTail = null; Node&lt;K,V&gt; next; do &#123; next = e.next; // 原索引 if ((e.hash &amp; oldCap) == 0) &#123; if (loTail == null) loHead = e; else loTail.next = e; loTail = e; &#125; // 原索引+oldCap else &#123; if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; &#125; &#125; while ((e = next) != null); // 原索引放到bucket里 if (loTail != null) &#123; loTail.next = null; newTab[j] = loHead; &#125; // 原索引+oldCap放到bucket里 if (hiTail != null) &#123; hiTail.next = null; newTab[j + oldCap] = hiHead; &#125; &#125; &#125; &#125; &#125; return newTab;&#125; 线程安全性在多线程使用场景中，应该尽量避免使用线程不安全的HashMap，而使用线程安全的ConcurrentHashMap。那么为什么说HashMap是线程不安全的，下面举例子说明在并发的多线程使用场景中使用HashMap可能造成死循环。代码例子如下(便于理解，仍然使用JDK1.7的环境)： 1234567891011121314151617181920public class HashMapInfiniteLoop &#123; private static HashMap&lt;Integer,String&gt; map = new HashMap&lt;Integer,String&gt;(2, 0.75f); public static void main(String[] args) &#123; map.put(5, &quot;C&quot;); new Thread(&quot;Thread1&quot;) &#123; public void run() &#123; map.put(7, &quot;B&quot;); System.out.println(map); &#125;; &#125;.start(); new Thread(&quot;Thread2&quot;) &#123; public void run() &#123; map.put(3, &quot;A); System.out.println(map); &#125;; &#125;.start(); &#125; &#125; 其中，map初始化为一个长度为2的数组，loadFactor=0.75，threshold=2*0.75=1，也就是说当put第二个key的时候，map就需要进行resize。 通过设置断点让线程1和线程2同时debug到transfer方法(3.3小节代码块)的首行。注意此时两个线程已经成功添加数据。放开thread1的断点至transfer方法的“Entry next = e.next;” 这一行；然后放开线程2的的断点，让线程2进行resize。结果如下图。 注意，Thread1的 e 指向了key(3)，而next指向了key(7)，其在线程二rehash后，指向了线程二重组后的链表。 线程一被调度回来执行，先是执行 newTalbe[i] = e， 然后是e = next，导致了e指向了key(7)，而下一次循环的next = e.next导致了next指向了key(3)。 e.next = newTable[i] 导致 key(3).next 指向了 key(7)。注意：此时的key(7).next 已经指向了key(3)， 环形链表就这样出现了。 于是，当我们用线程一调用map.get(11)时，悲剧就出现了——Infinite Loop。 JDK1.8与JDK1.7的性能对比HashMap中，如果key经过hash算法得出的数组索引位置全部不相同，即Hash算法非常好，那样的话，getKey方法的时间复杂度就是O(1)，如果Hash算法技术的结果碰撞非常多，假如Hash算极其差，所有的Hash算法结果得出的索引位置一样，那样所有的键值对都集中到一个桶中，或者在一个链表中，或者在一个红黑树中，时间复杂度分别为O(n)和O(lgn)。 鉴于JDK1.8做了多方面的优化，总体性能优于JDK1.7，下面我们从两个方面用例子证明这一点。 Hash较均匀的情况为了便于测试，我们先写一个类Key，如下： 123456789101112131415161718192021222324252627class Key implements Comparable&lt;Key&gt; &#123; private final int value; Key(int value) &#123; this.value = value; &#125; @Override public int compareTo(Key o) &#123; return Integer.compare(this.value, o.value); &#125; @Override public boolean equals(Object o) &#123; if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Key key = (Key) o; return value == key.value; &#125; @Override public int hashCode() &#123; return value; &#125;&#125; 这个类复写了equals方法，并且提供了相当好的hashCode函数，任何一个值的hashCode都不会相同，因为直接使用value当做hashcode。为了避免频繁的GC，我将不变的Key实例缓存了起来，而不是一遍一遍的创建它们。代码如下： 123456789101112131415public class Keys &#123; public static final int MAX_KEY = 10_000_000; private static final Key[] KEYS_CACHE = new Key[MAX_KEY]; static &#123; for (int i = 0; i &lt; MAX_KEY; ++i) &#123; KEYS_CACHE[i] = new Key(i); &#125; &#125; public static Key of(int value) &#123; return KEYS_CACHE[value]; &#125;&#125; 现在开始我们的试验，测试需要做的仅仅是，创建不同size的HashMap（1、10、100、……10000000），屏蔽了扩容的情况，代码如下： 1234567891011121314151617181920static void test(int mapSize) &#123; HashMap&lt;Key, Integer&gt; map = new HashMap&lt;Key,Integer&gt;(mapSize); for (int i = 0; i &lt; mapSize; ++i) &#123; map.put(Keys.of(i), i); &#125; long beginTime = System.nanoTime(); //获取纳秒 for (int i = 0; i &lt; mapSize; i++) &#123; map.get(Keys.of(i)); &#125; long endTime = System.nanoTime(); System.out.println(endTime - beginTime); &#125; public static void main(String[] args) &#123; for(int i=10;i&lt;= 1000 0000;i*= 10)&#123; test(i); &#125; &#125; 在测试中会查找不同的值，然后度量花费的时间，为了计算getKey的平均时间，我们遍历所有的get方法，计算总的时间，除以key的数量，计算一个平均值，主要用来比较，绝对值可能会受很多环境因素的影响。结果如下： 通过观测测试结果可知，JDK1.8的性能要高于JDK1.7 15%以上，在某些size的区域上，甚至高于100%。由于Hash算法较均匀，JDK1.8引入的红黑树效果不明显，下面我们看看Hash不均匀的的情况。 Hash极不均匀的情况假设我们又一个非常差的Key，它们所有的实例都返回相同的hashCode值。这是使用HashMap最坏的情况。代码修改如下： 123456789class Key implements Comparable&lt;Key&gt; &#123; //... @Override public int hashCode() &#123; return 1; &#125;&#125; 仍然执行main方法，得出的结果如下表所示： 从表中结果中可知，随着size的变大，JDK1.7的花费时间是增长的趋势，而JDK1.8是明显的降低趋势，并且呈现对数增长稳定。当一个链表太长的时候，HashMap会动态的将它替换成一个红黑树，这话的话会将时间复杂度从O(n)降为O(logn)。hash算法均匀和不均匀所花费的时间明显也不相同，这两种情况的相对比较，可以说明一个好的hash算法的重要性。 测试环境：处理器为2.2 GHz Intel Core i7，内存为16 GB 1600 MHz DDR3，SSD硬盘，使用默认的JVM参数，运行在64位的OS X 10.10.1上。 小结(1) 扩容是一个特别耗性能的操作，所以当程序员在使用HashMap的时候，估算map的大小，初始化的时候给一个大致的数值，避免map进行频繁的扩容。 (2) 负载因子是可以修改的，也可以大于1，但是建议不要轻易修改，除非情况非常特殊。 (3) HashMap是线程不安全的，不要在并发的环境中同时操作HashMap，建议使用ConcurrentHashMap。 (4) JDK1.8引入红黑树大程度优化了HashMap的性能。 (5) 还没升级JDK1.8的，现在开始升级吧。HashMap的性能提升仅仅是JDK1.8的冰山一角。 参考 JDK1.7&amp;JDK1.8 源码。 酷壳COOLSHELL，疫苗：JAVA HASHMAP的死循环，2013 CSDN博客频道，HashMap多线程死循环问题，2014。 红黑联盟，Java类集框架之HashMap(JDK1.8)源码剖析，2015。 CSDN博客频道， 教你初步了解红黑树，2010。 Java Code Geeks，HashMap performance improvements in Java 8，2014。 Importnew，危险！在HashMap中将可变对象用作Key，2014。 CSDN博客频道，为什么一般hashtable的桶数会取一个素数，2013。","categories":[{"name":"Java","slug":"Java","permalink":"http://www.yakjs.com/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.yakjs.com/tags/Java/"}]},{"title":"Gallery Example","slug":"Gallery-Example","date":"2016-01-26T13:55:37.000Z","updated":"2022-12-22T07:33:33.118Z","comments":true,"path":"2016/01/26/Gallery-Example/","link":"","permalink":"http://www.yakjs.com/2016/01/26/Gallery-Example/","excerpt":"To add a photo gallery placeholder to your post, just add the following lines to your front-matter: 1234photos:- https://www.hdwallpapers.net/previews/starry-night-over-corsica-986.jpg- https://www.hdwallpapers.net/previews/water-plant-close-up-979.jpg- ...","text":"To add a photo gallery placeholder to your post, just add the following lines to your front-matter: 1234photos:- https://www.hdwallpapers.net/previews/starry-night-over-corsica-986.jpg- https://www.hdwallpapers.net/previews/water-plant-close-up-979.jpg- ... and enable lightgallery plugin in your _config.yml: 12345# Pluginsplugins:+ lightgallery: true # options: true, false google_analytics: # enter the tracking ID for your Google Analytics ... You can also add photos between text to create another gallery like this: or this:","categories":[],"tags":[]},{"title":"Take a Deep Breath and Just Be","slug":"Take-a-Deep-Breath-and-Just-Be","date":"2015-12-11T13:55:37.000Z","updated":"2023-05-26T07:16:34.697Z","comments":true,"path":"2015/12/11/Take-a-Deep-Breath-and-Just-Be/","link":"","permalink":"http://www.yakjs.com/2015/12/11/Take-a-Deep-Breath-and-Just-Be/","excerpt":"This is hiker, a free responsive, high resolution and pretty flexible theme for you to use to write about things you love. Make sure to check all the examples out! To download this theme or to check the full feature list, just go here. Feel free to leave a comment there if you digg it! Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","text":"This is hiker, a free responsive, high resolution and pretty flexible theme for you to use to write about things you love. Make sure to check all the examples out! To download this theme or to check the full feature list, just go here. Feel free to leave a comment there if you digg it! Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"}],"tags":[]},{"title":"Independent Artists Make Their Own Way Without Big Record Labels","slug":"Independent-Artists-Make-Their-Own-Way-Without-Big-Record-Labels","date":"2015-02-03T09:29:25.000Z","updated":"2022-12-22T07:33:40.502Z","comments":true,"path":"2015/02/03/Independent-Artists-Make-Their-Own-Way-Without-Big-Record-Labels/","link":"","permalink":"http://www.yakjs.com/2015/02/03/Independent-Artists-Make-Their-Own-Way-Without-Big-Record-Labels/","excerpt":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni.","categories":[{"name":"Music","slug":"Music","permalink":"http://www.yakjs.com/categories/Music/"}],"tags":[]},{"title":"Starting to Actually Listen to The Lyrics in Music","slug":"Starting-to-Actually-Listen-to-The-Lyrics-in-Music","date":"2015-02-03T09:27:36.000Z","updated":"2022-12-22T07:33:56.122Z","comments":true,"path":"2015/02/03/Starting-to-Actually-Listen-to-The-Lyrics-in-Music/","link":"","permalink":"http://www.yakjs.com/2015/02/03/Starting-to-Actually-Listen-to-The-Lyrics-in-Music/","excerpt":"This is a self-hosted audio test with some music. Sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","text":"This is a self-hosted audio test with some music. Sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni.","categories":[{"name":"Music","slug":"Music","permalink":"http://www.yakjs.com/categories/Music/"}],"tags":[]},{"title":"Life Happens. Learn How to Flow With It","slug":"Life-Happens-Learn-How-to-Flow-With-It","date":"2015-02-02T14:36:23.000Z","updated":"2023-05-26T07:16:34.695Z","comments":true,"path":"2015/02/02/Life-Happens-Learn-How-to-Flow-With-It/","link":"","permalink":"http://www.yakjs.com/2015/02/02/Life-Happens-Learn-How-to-Flow-With-It/","excerpt":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. [pullquote align=”right”]”Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”[/pullquote]Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni.","categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"}],"tags":[]},{"title":"桃花源记","slug":"Chinese-Test","date":"2015-01-26T13:55:37.000Z","updated":"2023-02-21T11:01:44.651Z","comments":false,"path":"2015/01/26/Chinese-Test/","link":"","permalink":"http://www.yakjs.com/2015/01/26/Chinese-Test/","excerpt":"朝代：魏晋作者：陶渊明原文：晋太元中，武陵人捕鱼为业。缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷，渔人甚异之。复前行，欲穷其林。 林尽水源，便得一山，山有小口，仿佛若有光。便舍船，从口入。初极狭，才通人。复行数十步，豁然开朗。土地平旷，屋舍俨然，有良田美池桑竹之属。阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人。黄发垂髫，并怡然自乐。","text":"朝代：魏晋作者：陶渊明原文：晋太元中，武陵人捕鱼为业。缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷，渔人甚异之。复前行，欲穷其林。 林尽水源，便得一山，山有小口，仿佛若有光。便舍船，从口入。初极狭，才通人。复行数十步，豁然开朗。土地平旷，屋舍俨然，有良田美池桑竹之属。阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人。黄发垂髫，并怡然自乐。 见渔人，乃大惊，问所从来。具答之。便要还家，设酒杀鸡作食。村中闻有此人，咸来问讯。自云先世避秦时乱，率妻子邑人来此绝境，不复出焉，遂与外人间隔。问今是何世，乃不知有汉，无论魏晋。此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食。停数日，辞去。此中人语云：“不足为外人道也。”(间隔 一作：隔绝) 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷，不复得路。 南阳刘子骥，高尚士也，闻之，欣然规往。未果，寻病终，后遂无问津者。","categories":[],"tags":[]},{"title":"Decreasing the Use of Smartphones","slug":"Decreasing-the-Use-of-Smartphones","date":"2015-01-25T15:03:36.000Z","updated":"2023-05-26T07:16:34.718Z","comments":true,"path":"2015/01/25/Decreasing-the-Use-of-Smartphones/","link":"","permalink":"http://www.yakjs.com/2015/01/25/Decreasing-the-Use-of-Smartphones/","excerpt":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.” Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.","categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"}],"tags":[{"name":"Research","slug":"Research","permalink":"http://www.yakjs.com/tags/Research/"}]},{"title":"Gabrielle Aplin with The Power Of Love","slug":"Gabrielle-Aplin-with-The-Power-Of-Love","date":"2014-12-02T14:40:21.000Z","updated":"2022-12-22T07:33:25.062Z","comments":true,"path":"2014/12/02/Gabrielle-Aplin-with-The-Power-Of-Love/","link":"","permalink":"http://www.yakjs.com/2014/12/02/Gabrielle-Aplin-with-The-Power-Of-Love/","excerpt":"Dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","text":"Dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. “Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about. Stan Getz Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni.","categories":[{"name":"Music","slug":"Music","permalink":"http://www.yakjs.com/categories/Music/"}],"tags":[]}],"categories":[{"name":"lifeStyle","slug":"lifeStyle","permalink":"http://www.yakjs.com/categories/lifeStyle/"},{"name":"markup","slug":"lifeStyle/markup","permalink":"http://www.yakjs.com/categories/lifeStyle/markup/"},{"name":"AI","slug":"AI","permalink":"http://www.yakjs.com/categories/AI/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.yakjs.com/categories/Machine-Learning/"},{"name":"Java","slug":"Java","permalink":"http://www.yakjs.com/categories/Java/"},{"name":"Music","slug":"Music","permalink":"http://www.yakjs.com/categories/Music/"}],"tags":[{"name":"sticky","slug":"sticky","permalink":"http://www.yakjs.com/tags/sticky/"},{"name":"template","slug":"template","permalink":"http://www.yakjs.com/tags/template/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.yakjs.com/tags/Machine-Learning/"},{"name":"Java","slug":"Java","permalink":"http://www.yakjs.com/tags/Java/"},{"name":"Research","slug":"Research","permalink":"http://www.yakjs.com/tags/Research/"}]}